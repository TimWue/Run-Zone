{"version":3,"sources":["presentation/shared/LocalStorageKeys.tsx","context/RunnerContext.tsx","domain/runner/RunnerRepository.ts","presentation/shared/Styles.ts","presentation/login/Login.tsx","presentation/shared/Path.tsx","domain/map/MapService.ts","presentation/map/component/RenderRuns.tsx","presentation/map/component/RenderPosition.tsx","presentation/map/component/ShowRunControl.tsx","presentation/map/component/Map.tsx","context/CurrentRunContext.tsx","domain/run/RunRepository.ts","presentation/controls/CurrentRunControls.tsx","presentation/dashboard/InfoCard.tsx","presentation/dashboard/Dashboard.tsx","presentation/startRun/StartRun.tsx","presentation/util/SwipeOverlay.tsx","presentation/absolvedRuns/AbsolvedRun.tsx","presentation/absolvedRuns/Pagination.tsx","presentation/absolvedRuns/AbsolvedRuns.tsx","controller/runs/useRunsController.ts","presentation/navigation/Menu.tsx","presentation/header/Header.tsx","presentation/home/Home.tsx","presentation/navigation/BottomNavigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LocalStorageKeys","RunnerContext","createContext","runnerPosition","undefined","runnerSpeed","runner","runs","setRunner","setRuns","addRun","run","setRunnerPosition","position","RunnerContextProvider","children","useState","setRunnerSpeed","geoLocationOptions","enableHighAccuracy","geoLocationErrorCallback","err","console","warn","code","message","geoLocationSuccessCallback","geoPosition","LatLng","coords","latitude","longitude","speed","toFixed","useEffect","navigator","geolocation","watchPosition","Provider","value","oldState","length","Styles","createRunnerRepository","getRunner","localStorage","getItem","RUNNER","JSON","parse","setItem","stringify","removeRunner","removeItem","Path","Login","props","runnerName","setRunnerName","runnerRepository","useContext","LoginContainer","LoginHeader","LoginName","type","onChange","e","target","placeholder","LoginButton","onClick","log","newRunner","runnerRunIds","styled","h3","FONT_FAMILY_MAIN","FONT_SIZE_LARGER","div","input","button","createMapService","track2Polygon","trackPoints","map","trackPoint","calcArea","polygonPoints","points","poly","polygon","area","RenderRuns","mapService","index","Polyline","positions","track","RenderPosition","useMap","setView","Marker","ShowRunControl","setShowRuns","className","Map","showRuns","RunMap","center","zoom","scrollWheelZoom","TileLayer","attribution","url","MapContainer","CurrentRunContext","CurrentRunContextProvider","startTime","setStartTime","setTrackPoints","setRun","isRunning","setIsRunning","startRun","Date","now","stopRun","Promise","resolve","finishedRun","runId","uuid","endTime","pauseRun","addTrackPoint","resetRun","createRunRepository","storageRuns","RUNS","saveRuns","getAllRuns","deleteRuns","CurrentRunControls","runRepository","savePositionAsTrack","lat","lng","time","Buttons","StartButton","EndButton","then","ButtonBase","BACKGROUND_COLOR_SECOND","FONT_SIZE_NORMAL","InfoCard","property","Container","Property","Value","Content","Dashboard","runTime","setRunTime","runInterval","setRunInterval","id","setInterval","clearInterval","toISOString","substr","StartRun","SwipeOverlay","startPosition","setStartPosition","isActive","setIsActive","onTouchStart","targetTouches","clientX","onTouchMove","moveX","AbsolvedRun","deleteCallback","OuterContainer","icon","faTrash","AbsolvedRunMap","startPoint","centerFromRun","dragging","zoomControl","InfoContainer","ValueIconContainer","faCalendar","ValueContainer","toDateString","faClock","faRoute","DetailButton","Pagination","n","setOuterStartIndex","setOuterEndIndex","pageSize","setStartIndex","setEndIndex","Math","ceil","maxPage","currentPage","setCurrentPage","newStartindex","newEndindex","changeCurrentPageByButton","change","validateCurrentPage","newPage","PaginationContainer","ChangeButton","PageInput","currentTarget","MaxPage","AbsolvedRuns","startIndex","endIndex","filter","slice","useRunsController","initRuns","initRunner","deleteAll","Menu","show","setShow","controller","DropDownButton","faBars","DropDownContent","MenuButton","BACKGROUND_COLOR_MAIN","Header","HeaderContainer","Logo","HEADER_HEIGHT","h2","FONT_SIZE_LARGE","Home","Welcome","BottomNavigation","NavButton","CustomLink","to","NEW","faPlusSquare","faRunning","faBiking","faUserFriends","faCog","Link","BOTTOM_NAVIGATION_HEIGHT","PageContainer","App","runsController","path","ROOT","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36167b8d.chunk.js","sourcesContent":["export enum LocalStorageKeys {\n  RUNNER = \"runner\",\n  RUNS = \"runs\",\n}\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { Runner } from \"../domain/runner/Runner\";\nimport { Run } from \"../domain/run/Run\";\nimport { LatLng } from \"leaflet\";\n\ninterface RunnerProps {\n  runnerPosition: LatLng | undefined;\n  runnerSpeed: string | null;\n  runner: Runner | undefined;\n  setRunner: (runner: Runner | undefined) => void;\n  runs: Run[];\n  setRuns: (runs: Run[]) => void;\n  addRun: (run: Run) => void;\n  setRunnerPosition: (position: LatLng) => void;\n}\nexport const RunnerContext = createContext<RunnerProps>({\n  runnerPosition: undefined,\n  runnerSpeed: null,\n  runner: undefined,\n  runs: [],\n  setRunner(runner: Runner | undefined): void {},\n  setRuns(runs: Run[]): void {},\n  addRun(run: Run): void {},\n  setRunnerPosition(position: LatLng): void {},\n});\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nexport const RunnerContextProvider = ({ children }: ProviderProps) => {\n  const [runs, setRuns] = useState<Run[]>([]);\n  const [runnerPosition, setRunnerPosition] = useState<LatLng>();\n  const [runnerSpeed, setRunnerSpeed] = useState<string | null>(null);\n  const [runner, setRunner] = useState<Runner | undefined>();\n  const geoLocationOptions = { enableHighAccuracy: true };\n\n  const addRun = (run: Run) => {\n    setRuns((oldState: Run[]) =>\n      oldState.length > 0 ? [...oldState, run] : [run]\n    );\n  };\n\n  const startTracking = () => {\n    navigator.geolocation.watchPosition(\n      geoLocationSuccessCallback,\n      geoLocationErrorCallback,\n      geoLocationOptions\n    );\n  };\n\n  const geoLocationErrorCallback = (err: any) => {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  };\n\n  const geoLocationSuccessCallback = (geoPosition: GeolocationPosition) => {\n    setRunnerPosition(\n      new LatLng(geoPosition.coords.latitude, geoPosition.coords.longitude)\n    );\n    geoPosition.coords.speed &&\n      setRunnerSpeed((geoPosition.coords.speed * 3.6).toFixed(1));\n  };\n\n  useEffect(() => {\n    startTracking();\n  }, []);\n\n  return (\n    <RunnerContext.Provider\n      value={{\n        runner,\n        setRunner,\n        runs,\n        setRuns,\n        runnerPosition,\n        setRunnerPosition,\n        addRun,\n        runnerSpeed,\n      }}\n    >\n      {children}\n    </RunnerContext.Provider>\n  );\n};\n","import { Runner } from \"./Runner\";\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\n\nexport interface RunnerRepository {\n  getRunner: () => Runner | undefined;\n  setRunner: (runner: Runner) => void;\n  removeRunner: () => void;\n}\n\nexport const createRunnerRepository = (): RunnerRepository => {\n  const getRunner = () => {\n    const runner = localStorage.getItem(LocalStorageKeys.RUNNER);\n    return runner ? (JSON.parse(runner) as Runner) : undefined;\n  };\n\n  const setRunner = (runner: Runner) => {\n    localStorage.setItem(LocalStorageKeys.RUNNER, JSON.stringify(runner));\n  };\n\n  const removeRunner = () => {\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\n  };\n\n  return {\n    getRunner,\n    setRunner,\n    removeRunner,\n  };\n};\n","export enum Styles {\n  FONT_FAMILY_MAIN = \"Open Sans Condensed, sans-serif\",\n  BACKGROUND_COLOR_MAIN = \"#343a40\",\n  BACKGROUND_COLOR_SECOND = \"#5f9ea0\",\n  FONT_SIZE_NORMAL = \"1rem\",\n  FONT_SIZE_LARGER = \"1.25rem\",\n  FONT_SIZE_LARGE = \"1.5rem\",\n  BOTTOM_NAVIGATION_HEIGHT = \"4rem\",\n  MAP_HEIGHT_SIZE = \"60%\",\n  HEADER_HEIGHT = \"4rem\",\n}\n","import * as React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ntype Props = {};\nexport const Login = (props: Props) => {\n  const [runnerName, setRunnerName] = useState<string>(\"\");\n  const runnerRepository = createRunnerRepository();\n  const { setRunner } = useContext(RunnerContext);\n\n  const clickHandle = () => {\n    console.log(\"Login \" + runnerName);\n    const newRunner = { runnerName: runnerName, runnerRunIds: [] };\n    runnerRepository.setRunner(newRunner);\n    setRunner(newRunner);\n  };\n\n  return (\n    <LoginContainer>\n      <LoginHeader>Willkommen!</LoginHeader>\n      <LoginName\n        type={\"text\"}\n        onChange={(e) => {\n          setRunnerName(e.target.value);\n        }}\n        value={runnerName}\n        placeholder={\"Wie heißt du?\"}\n      />\n      <LoginButton onClick={clickHandle}>Login</LoginButton>\n    </LoginContainer>\n  );\n};\n\nconst LoginHeader = styled.h3`\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  text-transform: uppercase;\n  color: #343a40;\n  font-weight: bold;\n  margin: 0 0 30% 0;\n`;\n\nconst LoginContainer = styled.div`\n  width: 20%;\n  min-width: 300px;\n  height: 80%;\n  min-height: 500px;\n  background-color: aliceblue;\n  border-radius: 10px;\n  box-shadow: 10px 10px #282c34;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10% auto auto auto;\n`;\n\nconst LoginName = styled.input`\n  width: 70%;\n  height: 40px;\n  border: none;\n  border-radius: 10px;\n  margin: 5px;\n  text-align: center;\n`;\n\nconst LoginButton = styled.button`\n  width: 70%;\n  height: 50px;\n  background-color: #343a40;\n  color: white;\n  border-radius: 10px;\n  margin: 5px;\n`;\n","export enum Path {\n  ROOT = \"/\",\n  NEW = \"new\",\n  RUNS = \"runs\",\n}\n","import {TrackPoint} from \"../run/TrackPoint\";\nimport {LatLngTuple} from \"leaflet\";\nimport {area, polygon} from \"@turf/turf\";\n\nexport interface MapService {\n  track2Polygon: (trackPoints: TrackPoint[]) => LatLngTuple[];\n  calcArea: (polygonPoints: TrackPoint[]) => number;\n}\n\nexport const createMapService = (): MapService => {\n  return {\n    track2Polygon(trackPoints: TrackPoint[]): LatLngTuple[] {\n      return trackPoints.map((trackPoint) => {\n        return [trackPoint.latitude, trackPoint.longitude];\n      });\n    },\n    calcArea(polygonPoints: TrackPoint[]): number {\n      let points: any = polygonPoints.map((trackPoint) => {\n        return [trackPoint.latitude, trackPoint.longitude];\n      });\n      let poly = polygon([points]);\n      return area(poly) / 1000000; // from m^2 to km^2\n    },\n  };\n};\n","import { Polyline } from \"react-leaflet\";\nimport { FunctionComponent } from \"react\";\nimport { Run } from \"../../../domain/run/Run\";\nimport { createMapService } from \"../../../domain/map/MapService\";\n\ninterface Props {\n  runs: Run[];\n}\n\nexport const RenderRuns: FunctionComponent<Props> = ({ runs }: Props) => {\n  const mapService = createMapService();\n\n  return (\n    <>\n      {runs.map((run, index) => {\n        return (\n          <Polyline\n            positions={mapService.track2Polygon(run.track.trackPoints)}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import { FunctionComponent, useContext, useEffect } from \"react\";\nimport { Marker, useMap } from \"react-leaflet\";\nimport { RunnerContext } from \"../../../context/RunnerContext\";\n\ninterface Props {}\n\nexport const RenderPosition: FunctionComponent<Props> = () => {\n  const { runnerPosition } = useContext(RunnerContext);\n  const map = useMap();\n\n  useEffect(() => {\n    runnerPosition && map.setView(runnerPosition);\n  }, [runnerPosition]);\n\n  return <>{runnerPosition && <Marker position={runnerPosition} />}</>;\n};\n","import { FunctionComponent } from \"react\";\n\ninterface Props {\n  setShowRuns: any;\n}\n\nconst ShowRunControl: FunctionComponent<Props> = ({ setShowRuns }: Props) => {\n  return (\n    <div className=\"leaflet-top leaflet-right\">\n      <div className=\"leaflet-control\">\n        <button onClick={() => setShowRuns((oldState: any) => !oldState)}>\n          Show Runs\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowRunControl;\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport { RunnerContext } from \"../../../context/RunnerContext\";\nimport { RenderRuns } from \"./RenderRuns\";\nimport { RenderPosition } from \"./RenderPosition\";\nimport ShowRunControl from \"./ShowRunControl\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../../shared/Styles\";\n\ninterface Props {}\n\nexport const Map: FunctionComponent<Props> = ({}: Props) => {\n  const { runs } = useContext(RunnerContext);\n  const [showRuns, setShowRuns] = useState(false);\n\n  return (\n    <RunMap\n      className=\"basicMap\"\n      center={[0, 0]}\n      zoom={20}\n      scrollWheelZoom={false}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n      />\n      {showRuns && <RenderRuns runs={runs} />}\n      <RenderPosition />\n      <ShowRunControl setShowRuns={setShowRuns} />\n    </RunMap>\n  );\n};\n\nconst RunMap = styled(MapContainer)`\n  width: 100%;\n  height: 75%;\n`;\n","import { createContext, ReactNode, useState } from \"react\";\nimport { Run } from \"../domain/run/Run\";\nimport { TrackPoint } from \"../domain/run/TrackPoint\";\nimport { uuid } from \"uuidv4\";\n\ninterface CurrentRunProps {\n  startTime: number | undefined;\n  run: Run | undefined;\n  startRun: () => void;\n  stopRun: () => Promise<Run | undefined>;\n  pauseRun: () => void;\n  addTrackPoint: (trackPoint: TrackPoint) => void;\n  resetRun: () => void;\n  isRunning: boolean;\n  setIsRunning: (isRunning: boolean) => void;\n}\nexport const CurrentRunContext = createContext<CurrentRunProps>(\n  {} as CurrentRunProps\n);\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentRunContextProvider = ({ children }: ProviderProps) => {\n  const [startTime, setStartTime] = useState<number>();\n  const [trackPoints, setTrackPoints] = useState<TrackPoint[]>([]);\n  const [run, setRun] = useState<Run>();\n  const [isRunning, setIsRunning] = useState(false);\n\n  const resetRun = () => {\n    setRun(undefined);\n    setStartTime(undefined);\n    setTrackPoints([]);\n  };\n  const addTrackPoint = (trackPoint: TrackPoint) => {\n    console.log(\"Add TrackPoint: \", trackPoint);\n    setTrackPoints((oldState) => [...oldState, trackPoint]);\n  };\n\n  const startRun = () => {\n    console.log(\"Start Run\");\n    setStartTime(Date.now());\n    setIsRunning(true);\n  };\n\n  const pauseRun = () => {\n    console.log(\"Pause Run\");\n    setIsRunning(false);\n  };\n\n  const stopRun = (): Promise<Run | undefined> => {\n    console.log(\"Stop Run\");\n    if (trackPoints.length === 0) return Promise.resolve(undefined);\n    const track = { trackPoints };\n    const finishedRun = {\n      runId: uuid(),\n      track: track,\n      startTime: startTime ? startTime : Date.now(),\n      endTime: Date.now(),\n    };\n    setRun(finishedRun);\n    setIsRunning(false);\n    return Promise.resolve(finishedRun);\n  };\n\n  return (\n    <CurrentRunContext.Provider\n      value={{\n        startTime,\n        isRunning,\n        setIsRunning,\n        run,\n        startRun,\n        stopRun,\n        pauseRun,\n        addTrackPoint,\n        resetRun,\n      }}\n    >\n      {children}\n    </CurrentRunContext.Provider>\n  );\n};\n","import { Run } from \"./Run\";\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\n\nexport interface RunRepository {\n  getAllRuns: () => Run[];\n  saveRuns: (runs: Run[]) => void;\n  deleteRuns: () => void;\n}\n\nexport const createRunRepository = (): RunRepository => {\n  const storageRuns = localStorage.getItem(LocalStorageKeys.RUNS);\n  const runs: Run[] = storageRuns ? JSON.parse(storageRuns) : [];\n\n  const getAllRuns = (): Run[] => {\n    return runs;\n  };\n\n  const saveRuns = (runs: Run[]): void => {\n    localStorage.setItem(LocalStorageKeys.RUNS, JSON.stringify(runs));\n  };\n\n  const deleteRuns = (): void => {\n    localStorage.removeItem(LocalStorageKeys.RUNS);\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\n  };\n\n  return { saveRuns, getAllRuns, deleteRuns };\n};\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ninterface Props {}\n\nexport const CurrentRunControls: FunctionComponent<Props> = () => {\n  const { addTrackPoint, startRun, stopRun, run, pauseRun, isRunning } =\n    useContext(CurrentRunContext);\n  const { addRun, runs, runnerPosition } = useContext(RunnerContext);\n  const runRepository = createRunRepository();\n\n  useEffect(() => {\n    isRunning && savePositionAsTrack();\n  }, [runnerPosition]);\n\n  const savePositionAsTrack = () => {\n    runnerPosition &&\n      addTrackPoint({\n        latitude: runnerPosition.lat,\n        longitude: runnerPosition.lng,\n        time: Date.now(),\n      });\n  };\n\n  const handleStart = () => {\n    isRunning ? pauseRun() : startRun();\n  };\n\n  const handleSave = () => {\n    stopRun().then((finishedRun) => {\n      console.log(\"Save run\");\n      if (finishedRun) {\n        if (runs.length > 0) {\n          runRepository.saveRuns([...runs, finishedRun]);\n        } else {\n          runRepository.saveRuns([finishedRun]);\n        }\n        addRun(finishedRun);\n      }\n    });\n  };\n\n  return (\n    <Buttons>\n      <StartButton onClick={handleStart}>\n        {\" \"}\n        {isRunning ? \"Pause\" : \"Start\"}\n      </StartButton>\n      <EndButton onClick={handleSave}>End</EndButton>\n    </Buttons>\n  );\n\n  /* return (\n    <ButtonGroup size=\"lg\">\n      <Button onClick={handleStart} disabled={isRunning} variant=\"dark\">\n        Start\n      </Button>\n      <Button onClick={handleStop} disabled={!isRunning} variant=\"dark\">\n        Stop\n      </Button>\n      <Button onClick={handleSave} disabled={isRunning} variant=\"dark\">\n        Save\n      </Button>\n      <Button onClick={handleReset} disabled={isRunning} variant=\"dark\">\n        Reset\n      </Button>\n    </ButtonGroup>\n  );*/\n};\n\nconst Buttons = styled.div`\n  width: 100%;\n  height: 10%;\n  color: black;\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n`;\n\nconst ButtonBase = styled.button`\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  color: inherit;\n  border: none;\n  border-radius: 2px;\n  padding: 10px 0;\n  font-weight: bolder;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StartButton = styled(ButtonBase)`\n  width: 65%;\n`;\n\nconst EndButton = styled(ButtonBase)`\n  width: 35%;\n`;\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ntype Props = {\n  property: string;\n  value: string | number;\n};\n\nexport const InfoCard = ({ property, value }: Props) => {\n  return (\n    <Container>\n      <Property>{property}</Property>\n      <Value>{value}</Value>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 50%;\n  min-width: 120px;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  padding: 10px;\n`;\n\nconst Content = styled.div`\n  font-family: Open Sans Condensed, sans-serif;\n  font-weight: bolder;\n  color: black;\n`;\n\nconst Property = styled(Content)`\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\nconst Value = styled(Content)`\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport { InfoCard } from \"./InfoCard\";\nimport styled from \"styled-components\";\n\nexport const Dashboard = () => {\n  const { runnerSpeed } = useContext(RunnerContext);\n  const { startTime, isRunning } = useContext(CurrentRunContext);\n  const [runTime, setRunTime] = useState(0);\n  const [runInterval, setRunInterval] = useState<any>();\n\n  const updateRunTime = () => {\n    startTime && setRunTime(Date.now() - startTime);\n  };\n\n  useEffect(() => {\n    if (isRunning) {\n      const id = setInterval(() => {\n        updateRunTime();\n      }, 1000);\n      setRunInterval(id);\n    } else {\n      runInterval && clearInterval(runInterval);\n    }\n  }, [isRunning]);\n\n  return (\n    <Container>\n      <InfoCard\n        property={\"Speed\"}\n        value={runnerSpeed ? runnerSpeed + \" km/h\" : \"  0 km/h\"}\n      />\n      <InfoCard\n        property={\"Time\"}\n        value={new Date(runTime).toISOString().substr(11, 8)}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 15%;\n  flex-wrap: wrap;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { Map } from \"../map/component/Map\";\nimport { CurrentRunControls } from \"../controls/CurrentRunControls\";\nimport { Dashboard } from \"../dashboard/Dashboard\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ninterface Props {}\n\nexport const StartRun: FunctionComponent<Props> = () => {\n  return (\n    <>\n      <Dashboard />\n      <Map />\n      <CurrentRunControls />\n    </>\n  );\n};\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const SwipeOverlay: FunctionComponent = ({ children }) => {\n  const [startPosition, setStartPosition] = useState<number>();\n  const [isActive, setIsActive] = useState(false);\n\n  const touchMoveHandle = (e: React.TouchEvent<HTMLDivElement>) => {\n    const moveX = e.targetTouches[0].clientX;\n    if (startPosition! - moveX > 50) {\n      setIsActive(true);\n    }\n    if (startPosition! - moveX < -50) {\n      setIsActive(false);\n    }\n  };\n\n  const touchStartHandle = (e: React.TouchEvent<HTMLDivElement>) => {\n    setStartPosition(e.targetTouches[0].clientX);\n  };\n\n  return (\n    <Container\n      onTouchStart={touchStartHandle}\n      onTouchMove={touchMoveHandle}\n      isActive={isActive}\n    >\n      {isActive && children}\n    </Container>\n  );\n};\n\ninterface OverlayProps {\n  isActive: boolean;\n}\n\nconst Container = styled.div<OverlayProps>`\n  color: white;\n  width: inherit;\n  height: 100%;\n  z-index: 50;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  background-color: ${({ isActive }: OverlayProps) =>\n    isActive ? \"rgba(52, 58, 64, 0.9)\" : \"rgba(52, 58, 64, 0)\"};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { SwipeOverlay } from \"../util/SwipeOverlay\";\n\ninterface Props {\n  run: Run;\n  deleteCallback: (runId: string) => void;\n}\n\nexport const AbsolvedRun: FunctionComponent<Props> = ({\n  run,\n  deleteCallback,\n}) => {\n  const centerFromRun = (run: Run): LatLng => {\n    const startPoint = run.track.trackPoints[0];\n    return new LatLng(startPoint.latitude, startPoint.longitude);\n  };\n\n  const mapService = createMapService();\n\n  return (\n    <OuterContainer>\n      <SwipeOverlay>\n        <FontAwesomeIcon\n          onClick={() => deleteCallback(run.runId)}\n          icon={faTrash}\n        />\n      </SwipeOverlay>\n\n      <AbsolvedRunMap\n        className=\"basicMap\"\n        center={centerFromRun(run)}\n        zoom={20}\n        dragging={false}\n        zoomControl={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={mapService.track2Polygon(run.track.trackPoints)} />\n      </AbsolvedRunMap>\n      <InfoContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faCalendar} />\n          <ValueContainer>\n            {new Date(run.startTime).toDateString()}\n          </ValueContainer>\n        </ValueIconContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faClock} />\n          <ValueContainer>\n            {new Date(run.endTime - run.startTime).toISOString().substr(11, 8)}\n          </ValueContainer>\n        </ValueIconContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faRoute} />\n          <ValueContainer>10.2 km</ValueContainer>\n        </ValueIconContainer>\n        <DetailButton>Details</DetailButton>\n      </InfoContainer>\n    </OuterContainer>\n  );\n};\n\nconst DetailButton = styled.button`\n  max-width: 150px;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  color: #282c34;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 5px 5px 10px #282c34;\n  &:active {\n    box-shadow: 0 0;\n  }\n`;\n\nconst ValueIconContainer = styled.div`\n  color: white;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  display: inline-flex;\n  margin: 5px;\n`;\n\nconst ValueContainer = styled.div`\n  margin-left: 10px;\n`;\n\nconst OuterContainer = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  box-shadow: 5px 5px 5px #282c34;\n  border-radius: 5px;\n  margin-bottom: 15px;\n  cursor: pointer;\n`;\n\nconst InfoContainer = styled.div`\n  width: 50%;\n  padding-left: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AbsolvedRunMap = styled(MapContainer)`\n  width: 130px;\n  height: 130px;\n  border-radius: 8px;\n  border: none;\n  margin: 5px;\n  z-index: 0;\n`;\n","import React, {\n  Dispatch,\n  FunctionComponent,\n  SetStateAction,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  n: number;\n  setOuterStartIndex: (endIndex: number | undefined) => void;\n  setOuterEndIndex: (endIndex: number | undefined) => void;\n}\n\nexport const Pagination: FunctionComponent<Props> = ({\n  n,\n  setOuterStartIndex,\n  setOuterEndIndex,\n}) => {\n  const [pageSize, setPageSize] = useState(3);\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(pageSize);\n  const [maxPage, setMaxPage] = useState(Math.ceil(n / pageSize));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    let newStartindex = (currentPage - 1) * pageSize;\n    let newEndindex =\n      newStartindex + pageSize > n ? n : newStartindex + pageSize;\n\n    setStartIndex(newStartindex);\n    setOuterStartIndex(newStartindex);\n    setEndIndex(newEndindex);\n    setOuterEndIndex(newEndindex);\n  }, [pageSize, currentPage]);\n\n  const changeCurrentPageByButton = (change: number) => {\n    setCurrentPage(validateCurrentPage(currentPage + change));\n  };\n\n  const changeCurrentPageByInput = (e: React.FormEvent<HTMLInputElement>) => {\n    setCurrentPage(validateCurrentPage(+e.currentTarget.value));\n  };\n\n  const validateCurrentPage = (newPage: number): number => {\n    if (newPage > maxPage) {\n      newPage = maxPage;\n    }\n    if (newPage < 1) {\n      newPage = 1;\n    }\n    return newPage;\n  };\n\n  return (\n    <PaginationContainer>\n      <ChangeButton onClick={() => changeCurrentPageByButton(-1)}>\n        {\"<\"}\n      </ChangeButton>\n      <PageInput onChange={changeCurrentPageByInput} value={currentPage} />\n      <MaxPage> / {maxPage}</MaxPage>\n      <ChangeButton onClick={() => changeCurrentPageByButton(1)}>\n        {\">\"}\n      </ChangeButton>\n    </PaginationContainer>\n  );\n};\n\nconst ChangeButton = styled.button`\n  background-color: #343a40;\n  color: white;\n  border: 1px white;\n`;\nconst MaxPage = styled.div`\n  font-size: inherit;\n  width: 30px;\n  padding: 2px 5px;\n`;\n\nconst PageInput = styled.input`\n  width: 25px;\n  text-align: center;\n  font-size: inherit;\n`;\nconst PaginationContainer = styled.div`\n  color: white;\n  display: flex;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  float: right;\n  margin-bottom: 10px;\n`;\n","import React, { FunctionComponent, useContext, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { AbsolvedRun } from \"./AbsolvedRun\";\nimport { Pagination } from \"./Pagination\";\n\ninterface Props {}\n\nexport const AbsolvedRuns: FunctionComponent<Props> = () => {\n  const { runs, setRuns } = useContext(RunnerContext);\n  const [startIndex, setStartIndex] = useState<number>();\n  const [endIndex, setEndIndex] = useState<number>();\n\n  const deleteCallback = (runId: string) => {\n    setRuns(runs.filter((run) => run.runId != runId));\n  };\n\n  return (\n    <>\n      <Pagination\n        n={runs.length}\n        setOuterStartIndex={setStartIndex}\n        setOuterEndIndex={setEndIndex}\n      />\n\n      {runs.slice(startIndex, endIndex).map((run) => (\n        <AbsolvedRun\n          key={run.runId}\n          run={run}\n          deleteCallback={deleteCallback}\n        />\n      ))}\n    </>\n  );\n};\n","import { createRunRepository } from \"../../domain/run/RunRepository\";\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\nimport { useContext, useEffect } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\n\nexport interface RunsController {\n  initRuns: () => void;\n  initRunner: () => void;\n  removeRunner: () => void;\n  deleteAll: () => void;\n}\n\nexport const useRunsController = (): RunsController => {\n  const { setRunner, setRuns, runs } = useContext(RunnerContext);\n  const runRepository = createRunRepository();\n  const runnerRepository = createRunnerRepository();\n\n  useEffect(() => {\n    saveRuns();\n  }, [runs]);\n\n  const initRuns = () => {\n    setRuns(runRepository.getAllRuns());\n  };\n\n  const initRunner = () => {\n    setRunner(runnerRepository.getRunner());\n  };\n\n  const removeRunner = () => {\n    setRunner(undefined);\n    runnerRepository.removeRunner();\n  };\n\n  const saveRuns = () => {\n    runRepository.saveRuns(runs);\n  };\n\n  const deleteAll = () => {\n    runRepository.deleteRuns();\n  };\n\n  return { initRuns, initRunner, removeRunner, deleteAll };\n};\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Path } from \"../shared/Path\";\nimport { NavLink } from \"./NavLink\";\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Menu: FunctionComponent = () => {\n  const [show, setShow] = useState(false);\n  const controller = useRunsController();\n  return (\n    <DropDownButton onClick={() => setShow(!show)}>\n      <FontAwesomeIcon icon={faBars} />\n      <DropDownContent show={show}>\n        <MenuButton onClick={() => controller.deleteAll()}>Forget</MenuButton>\n        <MenuButton onClick={() => controller.removeRunner()}>\n          Logout\n        </MenuButton>\n      </DropDownContent>\n    </DropDownButton>\n  );\n};\n\nconst DropDownButton = styled.div`\n  position: relative;\n  display: inline-block;\n  color: white;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\ninterface Props {\n  show: boolean;\n}\nconst DropDownContent = styled.div<Props>`\n  color: white;\n  background-color: ${Styles.BACKGROUND_COLOR_MAIN};\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\n  position: absolute;\n  z-index: 500;\n  right: -200%;\n  box-shadow: 0px 0px 10px #282c34;\n  width: 100px;\n`;\nconst MenuButton = styled.div`\n  text-align: center;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: inherit;\n    color: white;\n  }\n`;\n","import * as React from \"react\";\nimport { Menu } from \"../navigation/Menu\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const Header = () => {\n  return (\n    <HeaderContainer>\n      <Logo>Places</Logo>\n      <Menu />\n    </HeaderContainer>\n  );\n};\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  height: ${Styles.HEADER_HEIGHT};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 20px 0 5px 0;\n`;\n\nconst Logo = styled.h2`\n  color: #eee;\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGE};\n  font-weight: bold;\n  line-height: 48px;\n  padding: 0 5px;\n  text-transform: uppercase;\n  min-width: 200px;\n`;\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const Home = () => {\n  const { runner } = useContext(RunnerContext);\n\n  return (\n    <Container>\n      <Welcome>\n        Willkommen\n        <br />\n        {runner!.runnerName}\n      </Welcome>\n    </Container>\n  );\n};\n\nconst Welcome = styled.h3`\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  text-align: center;\n  font-size: ${Styles.FONT_SIZE_LARGE};\n  color: white;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10% 0 0 0;\n`;\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Path } from \"../shared/Path\";\nimport { NavLink } from \"./NavLink\";\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faBiking,\n  faCog,\n  faPlusSquare,\n  faRoute,\n  faRunning,\n  faUserFriends,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const BottomNavigation: FunctionComponent = () => {\n  return (\n    <Container>\n      <NavButton>\n        <CustomLink to={Path.NEW}>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <CustomLink to={Path.RUNS}>\n          <FontAwesomeIcon icon={faRunning} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faBiking} />\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faUserFriends} />\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faCog} />\n      </NavButton>\n    </Container>\n  );\n};\n\nconst CustomLink = styled(Link)`\n  color: inherit;\n  font-size: inherit;\n  &:hover {\n    color: white;\n    background-color: inherit;\n  }\n  &:focus {\n    color: white;\n  }\n`;\n\nconst Container = styled.div`\n  background-color: #282c34;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-wrap: nowrap;\n  z-index: 1000;\n`;\n\nconst NavButton = styled.button`\n  height: ${Styles.BOTTOM_NAVIGATION_HEIGHT};\n  width: 20%;\n  display: block;\n  color: #888;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  border: none;\n  background-color: inherit;\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { RunnerContext } from \"./context/RunnerContext\";\nimport { Login } from \"./presentation/login/Login\";\nimport { StartRun } from \"./presentation/startRun/StartRun\";\nimport { AbsolvedRuns } from \"./presentation/absolvedRuns/AbsolvedRuns\";\nimport { Path } from \"./presentation/shared/Path\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Header } from \"./presentation/header/Header\";\nimport { Home } from \"./presentation/home/Home\";\nimport { useRunsController } from \"./controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { BottomNavigation } from \"./presentation/navigation/BottomNavigation\";\nimport { Styles } from \"./presentation/shared/Styles\";\n\nfunction App() {\n  const { runner } = useContext(RunnerContext);\n  const runsController = useRunsController();\n\n  useEffect(() => {\n    runsController.initRuns();\n    runsController.initRunner();\n  }, []);\n\n  if (!runner) {\n    return (\n      <OuterContainer>\n        <Login />\n      </OuterContainer>\n    );\n  }\n  return (\n    <OuterContainer>\n      <Header />\n      <PageContainer>\n        <Routes>\n          <Route path={Path.ROOT} element={<Home />} />\n          <Route path={Path.NEW} element={<StartRun />} />\n          <Route path={Path.RUNS} element={<AbsolvedRuns />} />\n        </Routes>\n      </PageContainer>\n      <BottomNavigation />\n    </OuterContainer>\n  );\n}\nconst OuterContainer = styled.div`\n  width: 100vw;\n  height: 100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT};\n`;\n\nconst PageContainer = styled.div`\n  height: calc(\n    100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT} - ${Styles.HEADER_HEIGHT}\n  );\n  width: 100%;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RunnerContextProvider } from \"./context/RunnerContext\";\nimport { CurrentRunContextProvider } from \"./context/CurrentRunContext\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RunnerContextProvider>\n      <CurrentRunContextProvider>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </CurrentRunContextProvider>\n    </RunnerContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}