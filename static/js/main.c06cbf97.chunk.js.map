{"version":3,"sources":["presentation/shared/LocalStorageKeys.tsx","context/RunnerContext.tsx","domain/runner/RunnerRepository.ts","presentation/shared/Styles.ts","presentation/login/Login.tsx","presentation/shared/Path.tsx","domain/map/MapService.ts","presentation/map/component/RenderRuns.tsx","presentation/map/component/RenderPosition.tsx","presentation/map/component/ShowRunControl.tsx","presentation/map/component/Map.tsx","context/CurrentRunContext.tsx","domain/run/RunRepository.ts","presentation/controls/Popup.tsx","presentation/controls/CurrentRunControls.tsx","presentation/dashboard/InfoCard.tsx","presentation/dashboard/Dashboard.tsx","presentation/startRun/StartRun.tsx","presentation/util/SwipeOverlay.tsx","presentation/absolvedRuns/AbsolvedRun.tsx","presentation/absolvedRuns/Pagination.tsx","presentation/absolvedRuns/AbsolvedRuns.tsx","controller/runs/useRunsController.ts","presentation/navigation/Menu.tsx","presentation/header/Header.tsx","presentation/home/Home.tsx","presentation/navigation/BottomNavigation.tsx","presentation/detail/Detail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LocalStorageKeys","RunnerContext","createContext","runnerPosition","undefined","runnerSpeed","runnerAltitude","runner","runs","setRunner","setRuns","addRun","run","setRunnerPosition","position","RunnerContextProvider","children","useState","setRunnerSpeed","setRunnerAltitude","geoLocationOptions","enableHighAccuracy","geoLocationErrorCallback","err","console","warn","code","message","geoLocationSuccessCallback","geoPosition","LatLng","coords","latitude","longitude","speed","altitude","toFixed","useEffect","navigator","geolocation","watchPosition","Provider","value","oldState","length","Styles","createRunnerRepository","getRunner","localStorage","getItem","RUNNER","JSON","parse","setItem","stringify","removeRunner","removeItem","Path","Login","props","runnerName","setRunnerName","runnerRepository","useContext","LoginContainer","LoginHeader","LoginName","type","onChange","e","target","placeholder","LoginButton","onClick","log","newRunner","runnerRunIds","styled","h3","FONT_FAMILY_MAIN","FONT_SIZE_LARGER","div","input","button","createMapService","track2Polygon","trackPoints","map","trackPoint","calcArea","polygonPoints","points","poly","polygon","area","RenderRuns","mapService","index","Polyline","positions","track","RenderPosition","useMap","setView","Marker","ShowRunControl","setShowRuns","className","Map","showRuns","RunMap","center","zoom","scrollWheelZoom","TileLayer","attribution","url","MapContainer","CurrentRunContext","CurrentRunContextProvider","startTime","setStartTime","setTrackPoints","distances","setDistances","setRun","isRunning","setIsRunning","calculateDistance","startTrackPoint","endTrackPoint","start","end","getDistance","startRun","Date","now","stopRun","Promise","resolve","finishedRun","runId","uuid","endTime","pauseRun","addTrackPoint","distance","resetRun","createRunRepository","storageRuns","RUNS","saveRuns","getAllRuns","deleteRuns","getRun","filter","pop","Popup","show","setShow","PopupContainer","MessageContainer","Button","BACKGROUND_COLOR_SECOND","FONT_SIZE_NORMAL","CurrentRunControls","runRepository","savePositionAsTrack","lat","lng","time","Buttons","StartButton","EndButton","then","ButtonBase","InfoCard","property","Container","Property","Value","Content","Dashboard","runTime","setRunTime","runInterval","setRunInterval","id","setInterval","clearInterval","toISOString","substr","StartRun","SwipeOverlay","startPosition","setStartPosition","isActive","setIsActive","onTouchStart","targetTouches","clientX","onTouchMove","moveX","AbsolvedRun","deleteCallback","OuterContainer","icon","faTrash","AbsolvedRunMap","startPoint","centerFromRun","dragging","zoomControl","InfoContainer","ValueIconContainer","faCalendar","ValueContainer","toDateString","faClock","faRoute","DetailButton","to","Link","Pagination","n","setOuterStartIndex","setOuterEndIndex","pageSize","setStartIndex","setEndIndex","Math","ceil","maxPage","currentPage","setCurrentPage","newStartindex","newEndindex","changeCurrentPageByButton","change","validateCurrentPage","newPage","PaginationContainer","ChangeButton","PageInput","currentTarget","MaxPage","AbsolvedRuns","startIndex","endIndex","slice","useRunsController","initRuns","initRunner","deleteAll","Menu","controller","DropDownButton","faBars","DropDownContent","MenuButton","BACKGROUND_COLOR_MAIN","Header","HeaderContainer","Logo","HEADER_HEIGHT","h2","FONT_SIZE_LARGE","Home","Welcome","BottomNavigation","NavButton","CustomLink","NEW","faPlusSquare","faRunning","faBiking","faUserFriends","faCog","BOTTOM_NAVIGATION_HEIGHT","Detail","useParams","useMemo","ResponsiveContainer","width","height","LineChart","data","XAxis","dataKey","tickLine","tickCount","tickFormatter","tick","substring","YAxis","interval","domain","Tooltip","CartesianGrid","stroke","vertical","Line","yAxisId","PageContainer","App","runsController","path","ROOT","element","DETAIL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c06cbf97.chunk.js","sourcesContent":["export enum LocalStorageKeys {\n  RUNNER = \"runner\",\n  RUNS = \"runs\",\n}\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { Runner } from \"../domain/runner/Runner\";\nimport { Run } from \"../domain/run/Run\";\nimport { LatLng } from \"leaflet\";\n\ninterface RunnerProps {\n  runnerPosition: LatLng | undefined;\n  runnerSpeed: string | null;\n  runnerAltitude: number | null;\n  runner: Runner | undefined;\n  setRunner: (runner: Runner | undefined) => void;\n  runs: Run[];\n  setRuns: (runs: Run[]) => void;\n  addRun: (run: Run) => void;\n  setRunnerPosition: (position: LatLng) => void;\n}\nexport const RunnerContext = createContext<RunnerProps>({\n  runnerPosition: undefined,\n  runnerSpeed: null,\n  runnerAltitude: null,\n  runner: undefined,\n  runs: [],\n  setRunner(runner: Runner | undefined): void {},\n  setRuns(runs: Run[]): void {},\n  addRun(run: Run): void {},\n  setRunnerPosition(position: LatLng): void {},\n});\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nexport const RunnerContextProvider = ({ children }: ProviderProps) => {\n  const [runs, setRuns] = useState<Run[]>([]);\n  const [runnerPosition, setRunnerPosition] = useState<LatLng>();\n  const [runnerSpeed, setRunnerSpeed] = useState<string | null>(null);\n  const [runnerAltitude, setRunnerAltitude] = useState<number | null>(null);\n  const [runner, setRunner] = useState<Runner | undefined>();\n  const geoLocationOptions = { enableHighAccuracy: true };\n\n  const addRun = (run: Run) => {\n    setRuns((oldState: Run[]) =>\n      oldState.length > 0 ? [...oldState, run] : [run]\n    );\n  };\n\n  const startTracking = () => {\n    navigator.geolocation.watchPosition(\n      geoLocationSuccessCallback,\n      geoLocationErrorCallback,\n      geoLocationOptions\n    );\n  };\n\n  const geoLocationErrorCallback = (err: any) => {\n    console.warn(`ERROR(${err.code}): ${err.message}`);\n  };\n\n  const geoLocationSuccessCallback = (geoPosition: GeolocationPosition) => {\n    setRunnerPosition(\n      new LatLng(geoPosition.coords.latitude, geoPosition.coords.longitude)\n    );\n    const speed = geoPosition.coords.speed;\n    const altitude = geoPosition.coords.altitude;\n    speed && setRunnerSpeed((speed * 3.6).toFixed(1));\n    altitude && setRunnerAltitude(altitude);\n  };\n\n  useEffect(() => {\n    startTracking();\n  }, []);\n\n  return (\n    <RunnerContext.Provider\n      value={{\n        runner,\n        setRunner,\n        runs,\n        setRuns,\n        runnerPosition,\n        runnerAltitude,\n        setRunnerPosition,\n        addRun,\n        runnerSpeed,\n      }}\n    >\n      {children}\n    </RunnerContext.Provider>\n  );\n};\n","import { Runner } from \"./Runner\";\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\n\nexport interface RunnerRepository {\n  getRunner: () => Runner | undefined;\n  setRunner: (runner: Runner) => void;\n  removeRunner: () => void;\n}\n\nexport const createRunnerRepository = (): RunnerRepository => {\n  const getRunner = () => {\n    const runner = localStorage.getItem(LocalStorageKeys.RUNNER);\n    return runner ? (JSON.parse(runner) as Runner) : undefined;\n  };\n\n  const setRunner = (runner: Runner) => {\n    localStorage.setItem(LocalStorageKeys.RUNNER, JSON.stringify(runner));\n  };\n\n  const removeRunner = () => {\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\n  };\n\n  return {\n    getRunner,\n    setRunner,\n    removeRunner,\n  };\n};\n","export enum Styles {\n  FONT_FAMILY_MAIN = \"Open Sans Condensed, sans-serif\",\n  BACKGROUND_COLOR_MAIN = \"#343a40\",\n  BACKGROUND_COLOR_SECOND = \"#5f9ea0\",\n  FONT_SIZE_NORMAL = \"1rem\",\n  FONT_SIZE_LARGER = \"1.25rem\",\n  FONT_SIZE_LARGE = \"1.5rem\",\n  BOTTOM_NAVIGATION_HEIGHT = \"4rem\",\n  MAP_HEIGHT_SIZE = \"60%\",\n  HEADER_HEIGHT = \"4rem\",\n}\n","import * as React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ntype Props = {};\nexport const Login = (props: Props) => {\n  const [runnerName, setRunnerName] = useState<string>(\"\");\n  const runnerRepository = createRunnerRepository();\n  const { setRunner } = useContext(RunnerContext);\n\n  const clickHandle = () => {\n    console.log(\"Login \" + runnerName);\n    const newRunner = { runnerName: runnerName, runnerRunIds: [] };\n    runnerRepository.setRunner(newRunner);\n    setRunner(newRunner);\n  };\n\n  return (\n    <LoginContainer>\n      <LoginHeader>Willkommen!</LoginHeader>\n      <LoginName\n        type={\"text\"}\n        onChange={(e) => {\n          setRunnerName(e.target.value);\n        }}\n        value={runnerName}\n        placeholder={\"Wie heißt du?\"}\n      />\n      <LoginButton onClick={clickHandle}>Login</LoginButton>\n    </LoginContainer>\n  );\n};\n\nconst LoginHeader = styled.h3`\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  text-transform: uppercase;\n  color: #343a40;\n  font-weight: bold;\n  margin: 0 0 30% 0;\n`;\n\nconst LoginContainer = styled.div`\n  width: 20%;\n  min-width: 300px;\n  height: 80%;\n  min-height: 500px;\n  background-color: aliceblue;\n  border-radius: 10px;\n  box-shadow: 10px 10px #282c34;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10% auto auto auto;\n`;\n\nconst LoginName = styled.input`\n  width: 70%;\n  height: 40px;\n  border: none;\n  border-radius: 10px;\n  margin: 5px;\n  text-align: center;\n`;\n\nconst LoginButton = styled.button`\n  width: 70%;\n  height: 50px;\n  background-color: #343a40;\n  color: white;\n  border-radius: 10px;\n  margin: 5px;\n`;\n","export enum Path {\n  ROOT = \"/\",\n  NEW = \"/new\",\n  RUNS = \"/runs\",\n  DETAIL = \"/runs/:runId\",\n}\n","import {TrackPoint} from \"../run/TrackPoint\";\nimport {LatLngTuple} from \"leaflet\";\nimport {area, polygon} from \"@turf/turf\";\n\nexport interface MapService {\n  track2Polygon: (trackPoints: TrackPoint[]) => LatLngTuple[];\n  calcArea: (polygonPoints: TrackPoint[]) => number;\n}\n\nexport const createMapService = (): MapService => {\n  return {\n    track2Polygon(trackPoints: TrackPoint[]): LatLngTuple[] {\n      return trackPoints.map((trackPoint) => {\n        return [trackPoint.latitude, trackPoint.longitude];\n      });\n    },\n    calcArea(polygonPoints: TrackPoint[]): number {\n      let points: any = polygonPoints.map((trackPoint) => {\n        return [trackPoint.latitude, trackPoint.longitude];\n      });\n      let poly = polygon([points]);\n      return area(poly) / 1000000; // from m^2 to km^2\n    },\n  };\n};\n","import { Polyline } from \"react-leaflet\";\nimport { FunctionComponent } from \"react\";\nimport { Run } from \"../../../domain/run/Run\";\nimport { createMapService } from \"../../../domain/map/MapService\";\n\ninterface Props {\n  runs: Run[];\n}\n\nexport const RenderRuns: FunctionComponent<Props> = ({ runs }: Props) => {\n  const mapService = createMapService();\n\n  return (\n    <>\n      {runs.map((run, index) => {\n        return (\n          <Polyline\n            positions={mapService.track2Polygon(run.track.trackPoints)}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import { FunctionComponent, useContext, useEffect } from \"react\";\nimport { Marker, useMap } from \"react-leaflet\";\nimport { RunnerContext } from \"../../../context/RunnerContext\";\n\ninterface Props {}\n\nexport const RenderPosition: FunctionComponent<Props> = () => {\n  const { runnerPosition } = useContext(RunnerContext);\n  const map = useMap();\n\n  useEffect(() => {\n    runnerPosition && map.setView(runnerPosition);\n  }, [runnerPosition]);\n\n  return <>{runnerPosition && <Marker position={runnerPosition} />}</>;\n};\n","import { FunctionComponent } from \"react\";\n\ninterface Props {\n  setShowRuns: any;\n}\n\nconst ShowRunControl: FunctionComponent<Props> = ({ setShowRuns }: Props) => {\n  return (\n    <div className=\"leaflet-top leaflet-right\">\n      <div className=\"leaflet-control\">\n        <button onClick={() => setShowRuns((oldState: any) => !oldState)}>\n          Show Runs\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowRunControl;\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport { RunnerContext } from \"../../../context/RunnerContext\";\nimport { RenderRuns } from \"./RenderRuns\";\nimport { RenderPosition } from \"./RenderPosition\";\nimport ShowRunControl from \"./ShowRunControl\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../../shared/Styles\";\n\ninterface Props {}\n\nexport const Map: FunctionComponent<Props> = ({}: Props) => {\n  const { runs } = useContext(RunnerContext);\n  const [showRuns, setShowRuns] = useState(false);\n\n  return (\n    <RunMap\n      className=\"basicMap\"\n      center={[0, 0]}\n      zoom={20}\n      scrollWheelZoom={false}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n      />\n      {showRuns && <RenderRuns runs={runs} />}\n      <RenderPosition />\n      <ShowRunControl setShowRuns={setShowRuns} />\n    </RunMap>\n  );\n};\n\nconst RunMap = styled(MapContainer)`\n  width: 100%;\n  height: 75%;\n`;\n","import { createContext, ReactNode, useState } from \"react\";\nimport { Run } from \"../domain/run/Run\";\nimport { TrackPoint } from \"../domain/run/TrackPoint\";\nimport { uuid } from \"uuidv4\";\nimport { getDistance } from \"geolib\";\nimport { Distance } from \"../domain/run/Distance\";\n\ninterface CurrentRunProps {\n  startTime: number | undefined;\n  run: Run | undefined;\n  startRun: () => void;\n  stopRun: () => Promise<Run | undefined>;\n  pauseRun: () => void;\n  addTrackPoint: (trackPoint: TrackPoint) => void;\n  resetRun: () => void;\n  isRunning: boolean;\n  setIsRunning: (isRunning: boolean) => void;\n}\nexport const CurrentRunContext = createContext<CurrentRunProps>(\n  {} as CurrentRunProps\n);\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentRunContextProvider = ({ children }: ProviderProps) => {\n  const [startTime, setStartTime] = useState<number>();\n  const [trackPoints, setTrackPoints] = useState<TrackPoint[]>([]);\n  const [distances, setDistances] = useState<Distance[]>([]);\n  const [run, setRun] = useState<Run>();\n  const [isRunning, setIsRunning] = useState(false);\n\n  const resetRun = () => {\n    setRun(undefined);\n    setStartTime(undefined);\n    setTrackPoints([]);\n  };\n  const addTrackPoint = (trackPoint: TrackPoint) => {\n    const distance =\n      trackPoints.length > 0\n        ? calculateDistance(trackPoints[trackPoints.length - 1], trackPoint)\n        : 0;\n    console.log(\"Add TrackPoint: \", trackPoint);\n    setTrackPoints((oldState) => [...oldState, trackPoint]);\n    setDistances((oldState) => [...oldState, { distance: distance }]);\n  };\n\n  const calculateDistance = (\n    startTrackPoint: TrackPoint,\n    endTrackPoint: TrackPoint\n  ) => {\n    const start = {\n      latitude: startTrackPoint.latitude,\n      longitude: startTrackPoint.longitude,\n    };\n\n    const end = {\n      latitude: endTrackPoint.latitude,\n      longitude: endTrackPoint.longitude,\n    };\n    return getDistance(start, end, 0.5);\n  };\n\n  const startRun = () => {\n    console.log(\"Start Run\");\n    setStartTime(Date.now());\n    setIsRunning(true);\n  };\n\n  const pauseRun = () => {\n    console.log(\"Pause Run\");\n    setIsRunning(false);\n  };\n\n  const stopRun = (): Promise<Run | undefined> => {\n    console.log(\"Stop Run\");\n    if (trackPoints.length === 0) return Promise.resolve(undefined);\n    const track = { trackPoints, distances };\n    const finishedRun = {\n      runId: uuid(),\n      track: track,\n      startTime: startTime ? startTime : Date.now(),\n      endTime: Date.now(),\n    };\n    setRun(finishedRun);\n    setIsRunning(false);\n    return Promise.resolve(finishedRun);\n  };\n\n  return (\n    <CurrentRunContext.Provider\n      value={{\n        startTime,\n        isRunning,\n        setIsRunning,\n        run,\n        startRun,\n        stopRun,\n        pauseRun,\n        addTrackPoint,\n        resetRun,\n      }}\n    >\n      {children}\n    </CurrentRunContext.Provider>\n  );\n};\n","import { Run } from \"./Run\";\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\n\nexport interface RunRepository {\n  getAllRuns: () => Run[];\n  saveRuns: (runs: Run[]) => void;\n  deleteRuns: () => void;\n  getRun: (runId: string) => Run | undefined;\n}\n\nexport const createRunRepository = (): RunRepository => {\n  const storageRuns = localStorage.getItem(LocalStorageKeys.RUNS);\n  const runs: Run[] = storageRuns ? JSON.parse(storageRuns) : [];\n\n  const getAllRuns = (): Run[] => {\n    return runs;\n  };\n\n  const saveRuns = (runs: Run[]): void => {\n    localStorage.setItem(LocalStorageKeys.RUNS, JSON.stringify(runs));\n  };\n\n  const deleteRuns = (): void => {\n    localStorage.removeItem(LocalStorageKeys.RUNS);\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\n  };\n\n  const getRun = (runId: string): Run | undefined => {\n    return runs.filter((run) => run.runId === runId).pop();\n  };\n\n  return { saveRuns, getAllRuns, deleteRuns, getRun };\n};\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ninterface Props {\n  show: boolean;\n  setShow: (show: boolean) => void;\n}\n\nexport const Popup: FunctionComponent<Props> = ({ show, setShow }) => {\n  return (\n    <PopupContainer show={show}>\n      <MessageContainer>Strecke gespeichert!</MessageContainer>\n      <Button onClick={() => setShow(false)}>Nice</Button>\n    </PopupContainer>\n  );\n};\nconst MessageContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  color: white;\n  width: 100%;\n  text-align: center;\n  padding: 2px 0 10px 0;\n`;\n\nconst Button = styled.div`\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  width: 30vw;\n  color: black;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n`;\n\ninterface ContainerProps {\n  show: boolean;\n}\n\nconst PopupContainer = styled.div<ContainerProps>`\n  width: 70vw;\n  border-radius: 5px;\n  border: 1px solid black;\n  position: absolute;\n  background-color: #343a40;\n  color: white;\n  top: 50%;\n  left: calc(50% - 70vw * 0.5);\n  visibility: ${({ show }: ContainerProps) => (show ? \"visible\" : \"hidden\")};\n  z-index: 500;\n  padding: 8px 10px;\n  font-weight: bolder;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n`;\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\nimport { Button, ButtonGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { Popup } from \"./Popup\";\nimport { getDistance } from \"geolib\";\n\ninterface Props {}\n\nexport const CurrentRunControls: FunctionComponent<Props> = () => {\n  const [show, setShow] = useState(false);\n  const { addTrackPoint, startRun, stopRun, pauseRun, isRunning } =\n    useContext(CurrentRunContext);\n  const { addRun, runs, runnerPosition, runnerAltitude } =\n    useContext(RunnerContext);\n  const runRepository = createRunRepository();\n\n  useEffect(() => {\n    isRunning && savePositionAsTrack();\n  }, [runnerPosition]);\n\n  const savePositionAsTrack = () => {\n    runnerPosition &&\n      addTrackPoint({\n        latitude: runnerPosition.lat,\n        longitude: runnerPosition.lng,\n        altitude: runnerAltitude,\n        time: Date.now(),\n      });\n  };\n\n  const handleStart = () => {\n    isRunning ? pauseRun() : startRun();\n  };\n\n  const handleSave = () => {\n    stopRun().then((finishedRun) => {\n      console.log(\"Save run\");\n      if (finishedRun) {\n        if (runs.length > 0) {\n          runRepository.saveRuns([...runs, finishedRun]);\n        } else {\n          runRepository.saveRuns([finishedRun]);\n        }\n        addRun(finishedRun);\n        setShow(true);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Buttons>\n        <StartButton onClick={handleStart}>\n          {isRunning ? \"Pause\" : \"Start\"}\n        </StartButton>\n        <EndButton onClick={handleSave}>End</EndButton>\n      </Buttons>\n      <Popup show={show} setShow={setShow} />\n    </>\n  );\n};\n\nconst Buttons = styled.div`\n  width: 100%;\n  height: 10%;\n  color: black;\n  display: flex;\n  text-align: center;\n  justify-content: space-between;\n`;\n\nconst ButtonBase = styled.button`\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  color: inherit;\n  border: none;\n  padding: 10px 0;\n  font-weight: bolder;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst StartButton = styled(ButtonBase)`\n  width: 65%;\n`;\n\nconst EndButton = styled(ButtonBase)`\n  width: 35%;\n`;\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ntype Props = {\n  property: string;\n  value: string | number;\n};\n\nexport const InfoCard = ({ property, value }: Props) => {\n  return (\n    <Container>\n      <Property>{property}</Property>\n      <Value>{value}</Value>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 50%;\n  min-width: 120px;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  padding: 10px;\n`;\n\nconst Content = styled.div`\n  font-family: Open Sans Condensed, sans-serif;\n  font-weight: bolder;\n  color: black;\n`;\n\nconst Property = styled(Content)`\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\nconst Value = styled(Content)`\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport { InfoCard } from \"./InfoCard\";\nimport styled from \"styled-components\";\n\nexport const Dashboard = () => {\n  const { runnerSpeed } = useContext(RunnerContext);\n  const { startTime, isRunning } = useContext(CurrentRunContext);\n  const [runTime, setRunTime] = useState(0);\n  const [runInterval, setRunInterval] = useState<any>();\n\n  const updateRunTime = () => {\n    startTime && setRunTime(Date.now() - startTime);\n  };\n\n  useEffect(() => {\n    if (isRunning) {\n      const id = setInterval(() => {\n        updateRunTime();\n      }, 1000);\n      setRunInterval(id);\n    } else {\n      runInterval && clearInterval(runInterval);\n    }\n  }, [isRunning]);\n\n  return (\n    <Container>\n      <InfoCard\n        property={\"Speed\"}\n        value={runnerSpeed ? runnerSpeed + \" km/h\" : \"  0 km/h\"}\n      />\n      <InfoCard\n        property={\"Time\"}\n        value={new Date(runTime).toISOString().substr(11, 8)}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 15%;\n  flex-wrap: wrap;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { Map } from \"../map/component/Map\";\nimport { CurrentRunControls } from \"../controls/CurrentRunControls\";\nimport { Dashboard } from \"../dashboard/Dashboard\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ninterface Props {}\n\nexport const StartRun: FunctionComponent<Props> = () => {\n  return (\n    <>\n      <Dashboard />\n      <Map />\n      <CurrentRunControls />\n    </>\n  );\n};\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const SwipeOverlay: FunctionComponent = ({ children }) => {\n  const [startPosition, setStartPosition] = useState<number>();\n  const [isActive, setIsActive] = useState(false);\n\n  const touchMoveHandle = (e: React.TouchEvent<HTMLDivElement>) => {\n    const moveX = e.targetTouches[0].clientX;\n    if (startPosition! - moveX > 50) {\n      setIsActive(true);\n    }\n    if (startPosition! - moveX < -50) {\n      setIsActive(false);\n    }\n  };\n\n  const touchStartHandle = (e: React.TouchEvent<HTMLDivElement>) => {\n    setStartPosition(e.targetTouches[0].clientX);\n  };\n\n  return (\n    <Container\n      onTouchStart={touchStartHandle}\n      onTouchMove={touchMoveHandle}\n      isActive={isActive}\n    >\n      {isActive && children}\n    </Container>\n  );\n};\n\ninterface OverlayProps {\n  isActive: boolean;\n}\n\nconst Container = styled.div<OverlayProps>`\n  /*\n  display: ${({ isActive }: OverlayProps) => (isActive ? \"block\" : \"none\")};\n*/\n  display: flex;\n  color: white;\n  width: inherit;\n  height: 100%;\n  z-index: ${({ isActive }: OverlayProps) => (isActive ? 50 : 30)};\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  background-color: ${({ isActive }: OverlayProps) =>\n    isActive ? \"rgba(52, 58, 64, 0.9)\" : \"rgba(52, 58, 64, 0)\"};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { SwipeOverlay } from \"../util/SwipeOverlay\";\nimport { Link } from \"react-router-dom\";\nimport { Path } from \"../shared/Path\";\ninterface Props {\n  run: Run;\n  deleteCallback: (runId: string) => void;\n}\n\nexport const AbsolvedRun: FunctionComponent<Props> = ({\n  run,\n  deleteCallback,\n}) => {\n  const centerFromRun = (run: Run): LatLng => {\n    const startPoint = run.track.trackPoints[0];\n    return new LatLng(startPoint.latitude, startPoint.longitude);\n  };\n\n  const mapService = createMapService();\n\n  return (\n    <OuterContainer>\n      <SwipeOverlay>\n        <FontAwesomeIcon\n          onClick={() => deleteCallback(run.runId)}\n          icon={faTrash}\n        />\n      </SwipeOverlay>\n\n      <AbsolvedRunMap\n        className=\"basicMap\"\n        center={centerFromRun(run)}\n        zoom={20}\n        dragging={false}\n        zoomControl={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={mapService.track2Polygon(run.track.trackPoints)} />\n      </AbsolvedRunMap>\n      <InfoContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faCalendar} />\n          <ValueContainer>\n            {new Date(run.startTime).toDateString()}\n          </ValueContainer>\n        </ValueIconContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faClock} />\n          <ValueContainer>\n            {new Date(run.endTime - run.startTime).toISOString().substr(11, 8)}\n          </ValueContainer>\n        </ValueIconContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faRoute} />\n          <ValueContainer>10.2 km</ValueContainer>\n        </ValueIconContainer>\n        <DetailButton to={Path.RUNS + \"/\" + run.runId}>Details</DetailButton>\n      </InfoContainer>\n    </OuterContainer>\n  );\n};\n\nconst DetailButton = styled(Link)`\n  text-align: center;\n  max-width: 150px;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  color: #282c34;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 5px 5px 10px #282c34;\n  &:active {\n    box-shadow: 0 0;\n  }\n  z-index: 40;\n`;\n\nconst ValueIconContainer = styled.div`\n  color: white;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  display: inline-flex;\n  margin: 5px;\n`;\n\nconst ValueContainer = styled.div`\n  margin-left: 10px;\n`;\n\nconst OuterContainer = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  box-shadow: 5px 5px 5px #282c34;\n  border-radius: 5px;\n  margin-bottom: 15px;\n  cursor: pointer;\n`;\n\nconst InfoContainer = styled.div`\n  width: 50%;\n  padding-left: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AbsolvedRunMap = styled(MapContainer)`\n  width: 130px;\n  height: 130px;\n  border-radius: 8px;\n  border: none;\n  margin: 5px;\n  z-index: 0;\n`;\n","import React, {\n  Dispatch,\n  FunctionComponent,\n  SetStateAction,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  n: number;\n  setOuterStartIndex: (endIndex: number | undefined) => void;\n  setOuterEndIndex: (endIndex: number | undefined) => void;\n}\n\nexport const Pagination: FunctionComponent<Props> = ({\n  n,\n  setOuterStartIndex,\n  setOuterEndIndex,\n}) => {\n  const [pageSize, setPageSize] = useState(3);\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(pageSize);\n  const [maxPage, setMaxPage] = useState(Math.ceil(n / pageSize));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    let newStartindex = (currentPage - 1) * pageSize;\n    let newEndindex =\n      newStartindex + pageSize > n ? n : newStartindex + pageSize;\n\n    setStartIndex(newStartindex);\n    setOuterStartIndex(newStartindex);\n    setEndIndex(newEndindex);\n    setOuterEndIndex(newEndindex);\n  }, [pageSize, currentPage]);\n\n  const changeCurrentPageByButton = (change: number) => {\n    setCurrentPage(validateCurrentPage(currentPage + change));\n  };\n\n  const changeCurrentPageByInput = (e: React.FormEvent<HTMLInputElement>) => {\n    setCurrentPage(validateCurrentPage(+e.currentTarget.value));\n  };\n\n  const validateCurrentPage = (newPage: number): number => {\n    if (newPage > maxPage) {\n      newPage = maxPage;\n    }\n    if (newPage < 1) {\n      newPage = 1;\n    }\n    return newPage;\n  };\n\n  return (\n    <PaginationContainer>\n      <ChangeButton onClick={() => changeCurrentPageByButton(-1)}>\n        {\"<\"}\n      </ChangeButton>\n      <PageInput onChange={changeCurrentPageByInput} value={currentPage} />\n      <MaxPage> / {maxPage}</MaxPage>\n      <ChangeButton onClick={() => changeCurrentPageByButton(1)}>\n        {\">\"}\n      </ChangeButton>\n    </PaginationContainer>\n  );\n};\n\nconst ChangeButton = styled.button`\n  background-color: #343a40;\n  color: white;\n  border: 1px white;\n`;\nconst MaxPage = styled.div`\n  font-size: inherit;\n  width: 30px;\n  padding: 2px 5px;\n`;\n\nconst PageInput = styled.input`\n  width: 25px;\n  text-align: center;\n  font-size: inherit;\n`;\nconst PaginationContainer = styled.div`\n  color: white;\n  display: flex;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  float: right;\n  margin-bottom: 10px;\n`;\n","import React, { FunctionComponent, useContext, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { AbsolvedRun } from \"./AbsolvedRun\";\nimport { Pagination } from \"./Pagination\";\n\ninterface Props {}\n\nexport const AbsolvedRuns: FunctionComponent<Props> = () => {\n  const { runs, setRuns } = useContext(RunnerContext);\n  const [startIndex, setStartIndex] = useState<number>();\n  const [endIndex, setEndIndex] = useState<number>();\n\n  const deleteCallback = (runId: string) => {\n    setRuns(runs.filter((run) => run.runId != runId));\n  };\n\n  return (\n    <>\n      <Pagination\n        n={runs.length}\n        setOuterStartIndex={setStartIndex}\n        setOuterEndIndex={setEndIndex}\n      />\n\n      {runs.slice(startIndex, endIndex).map((run) => (\n        <AbsolvedRun\n          key={run.runId}\n          run={run}\n          deleteCallback={deleteCallback}\n        />\n      ))}\n    </>\n  );\n};\n","import { createRunRepository } from \"../../domain/run/RunRepository\";\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\nimport { useContext, useEffect } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\n\nexport interface RunsController {\n  initRuns: () => void;\n  initRunner: () => void;\n  removeRunner: () => void;\n  deleteAll: () => void;\n}\n\nexport const useRunsController = (): RunsController => {\n  const { setRunner, setRuns, runs } = useContext(RunnerContext);\n  const runRepository = createRunRepository();\n  const runnerRepository = createRunnerRepository();\n\n  useEffect(() => {\n    saveRuns();\n  }, [runs]);\n\n  const initRuns = () => {\n    setRuns(runRepository.getAllRuns());\n  };\n\n  const initRunner = () => {\n    setRunner(runnerRepository.getRunner());\n  };\n\n  const removeRunner = () => {\n    setRunner(undefined);\n    runnerRepository.removeRunner();\n  };\n\n  const saveRuns = () => {\n    runRepository.saveRuns(runs);\n  };\n\n  const deleteAll = () => {\n    runRepository.deleteRuns();\n  };\n\n  return { initRuns, initRunner, removeRunner, deleteAll };\n};\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Path } from \"../shared/Path\";\nimport { NavLink } from \"./NavLink\";\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Menu: FunctionComponent = () => {\n  const [show, setShow] = useState(false);\n  const controller = useRunsController();\n  return (\n    <DropDownButton onClick={() => setShow(!show)}>\n      <FontAwesomeIcon icon={faBars} />\n      <DropDownContent show={show}>\n        <MenuButton onClick={() => controller.deleteAll()}>Forget</MenuButton>\n        <MenuButton onClick={() => controller.removeRunner()}>\n          Logout\n        </MenuButton>\n      </DropDownContent>\n    </DropDownButton>\n  );\n};\n\nconst DropDownButton = styled.div`\n  padding-top: 5px;\n  position: relative;\n  display: inline-block;\n  color: white;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\ninterface Props {\n  show: boolean;\n}\nconst DropDownContent = styled.div<Props>`\n  color: white;\n  background-color: ${Styles.BACKGROUND_COLOR_MAIN};\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\n  position: absolute;\n  z-index: 500;\n  right: -200%;\n  box-shadow: 0px 0px 10px #282c34;\n  width: 100px;\n`;\nconst MenuButton = styled.div`\n  text-align: center;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: inherit;\n    color: white;\n  }\n`;\n","import * as React from \"react\";\nimport { Menu } from \"../navigation/Menu\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const Header = () => {\n  return (\n    <HeaderContainer>\n      <Logo>Places</Logo>\n      <Menu />\n    </HeaderContainer>\n  );\n};\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  height: ${Styles.HEADER_HEIGHT};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 10px 40px 5px 10px;\n`;\n\nconst Logo = styled.h2`\n  color: #eee;\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGE};\n  font-weight: bold;\n  line-height: 48px;\n  padding: 0 5px;\n  text-transform: uppercase;\n  min-width: 200px;\n`;\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const Home = () => {\n  const { runner } = useContext(RunnerContext);\n\n  return (\n    <Container>\n      <Welcome>\n        Willkommen\n        <br />\n        {runner!.runnerName}\n      </Welcome>\n    </Container>\n  );\n};\n\nconst Welcome = styled.h3`\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  text-align: center;\n  font-size: ${Styles.FONT_SIZE_LARGE};\n  color: white;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10% 0 0 0;\n`;\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Path } from \"../shared/Path\";\nimport { NavLink } from \"./NavLink\";\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faBiking,\n  faCog,\n  faPlusSquare,\n  faRoute,\n  faRunning,\n  faUserFriends,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const BottomNavigation: FunctionComponent = () => {\n  return (\n    <Container>\n      <NavButton>\n        <CustomLink to={Path.NEW}>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <CustomLink to={Path.RUNS}>\n          <FontAwesomeIcon icon={faRunning} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faBiking} />\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faUserFriends} />\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faCog} />\n      </NavButton>\n    </Container>\n  );\n};\n\nconst CustomLink = styled(Link)`\n  color: inherit;\n  font-size: inherit;\n  &:hover {\n    color: white;\n    background-color: inherit;\n  }\n  &:focus {\n    color: white;\n  }\n`;\n\nconst Container = styled.div`\n  background-color: #282c34;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-wrap: nowrap;\n  z-index: 1000;\n`;\n\nconst NavButton = styled.button`\n  height: ${Styles.BOTTOM_NAVIGATION_HEIGHT};\n  width: 20%;\n  display: block;\n  color: #888;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  border: none;\n  background-color: inherit;\n`;\n","import React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { SwipeOverlay } from \"../util/SwipeOverlay\";\nimport { useParams } from \"react-router\";\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nexport const Detail: FunctionComponent = () => {\n  const { runId } = useParams<string>();\n  const runRepository = createRunRepository();\n\n  const run = useMemo(() => {\n    return runRepository.getRun(runId!);\n  }, [runId]);\n\n  if (!run) return <div>No run found</div>;\n  return (\n    <>\n      {/*<Details>Start:{new Date(run.startTime).toDateString()}</Details>\n      <Details>End:{new Date(run.endTime).toDateString()}</Details>*/}\n      <ResponsiveContainer width=\"90%\" height=\"30%\">\n        <LineChart data={run.track.distances}>\n          <XAxis\n            dataKey=\"time\"\n            tickLine={false}\n            tickCount={5}\n            tickFormatter={(tick, index) => {\n              return new Date(tick - run?.startTime)\n                .toISOString()\n                .substring(0, 10);\n            }}\n          />\n          <YAxis\n            interval={\"preserveStartEnd\"}\n            domain={[\"dataMin\", \"dataMax\"]}\n          />\n          <Tooltip />\n          <CartesianGrid stroke=\"#666 \" vertical={false} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"distance\"\n            stroke=\"#ff7300\"\n            yAxisId={0}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nconst Details = styled.div`\n  color: white;\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { RunnerContext } from \"./context/RunnerContext\";\nimport { Login } from \"./presentation/login/Login\";\nimport { StartRun } from \"./presentation/startRun/StartRun\";\nimport { AbsolvedRuns } from \"./presentation/absolvedRuns/AbsolvedRuns\";\nimport { Path } from \"./presentation/shared/Path\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Header } from \"./presentation/header/Header\";\nimport { Home } from \"./presentation/home/Home\";\nimport { useRunsController } from \"./controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { BottomNavigation } from \"./presentation/navigation/BottomNavigation\";\nimport { Styles } from \"./presentation/shared/Styles\";\nimport { Detail } from \"./presentation/detail/Detail\";\n\nfunction App() {\n  const { runner } = useContext(RunnerContext);\n  const runsController = useRunsController();\n\n  useEffect(() => {\n    runsController.initRuns();\n    runsController.initRunner();\n  }, []);\n\n  if (!runner) {\n    return (\n      <OuterContainer>\n        <Login />\n      </OuterContainer>\n    );\n  }\n  return (\n    <OuterContainer>\n      <Header />\n      <PageContainer>\n        <Routes>\n          <Route path={Path.ROOT} element={<Home />} />\n          <Route path={Path.NEW} element={<StartRun />} />\n          <Route path={Path.RUNS} element={<AbsolvedRuns />} />\n          <Route path={Path.DETAIL} element={<Detail />} />\n        </Routes>\n      </PageContainer>\n      <BottomNavigation />\n    </OuterContainer>\n  );\n}\nconst OuterContainer = styled.div`\n  width: 100vw;\n  height: 100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT};\n`;\n\nconst PageContainer = styled.div`\n  height: calc(\n    100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT} - ${Styles.HEADER_HEIGHT}\n  );\n  width: 100%;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RunnerContextProvider } from \"./context/RunnerContext\";\nimport { CurrentRunContextProvider } from \"./context/CurrentRunContext\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RunnerContextProvider>\n      <CurrentRunContextProvider>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </CurrentRunContextProvider>\n    </RunnerContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}