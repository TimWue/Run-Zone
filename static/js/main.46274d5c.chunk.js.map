{"version":3,"sources":["context/RunnerContext.tsx","presentation/shared/LocalStorageKeys.tsx","domain/runner/RunnerRepository.ts","presentation/shared/Styles.ts","presentation/login/Login.tsx","domain/map/MapService.ts","presentation/map/component/RenderRuns.tsx","domain/sensor/SensorRepository.ts","presentation/map/component/RenderPosition.tsx","presentation/map/component/ShowRunControl.tsx","presentation/map/component/Map.tsx","context/CurrentRunContext.tsx","domain/run/RunRepository.ts","presentation/controls/Popup.tsx","presentation/controls/CurrentRunControls.tsx","presentation/dashboard/InfoCard.tsx","presentation/dashboard/Dashboard.tsx","presentation/startRun/StartRun.tsx","presentation/util/SwipeOverlay.tsx","presentation/shared/Path.tsx","presentation/absolvedRuns/AbsolvedRun.tsx","presentation/absolvedRuns/Pagination.tsx","presentation/absolvedRuns/AbsolvedRuns.tsx","controller/runs/useRunsController.ts","presentation/navigation/Menu.tsx","presentation/header/Header.tsx","presentation/home/Home.tsx","presentation/navigation/BottomNavigation.tsx","presentation/detail/chart/ChartData.ts","presentation/detail/chart/elements/Gradient.tsx","presentation/detail/chart/elements/DataSelector.tsx","presentation/detail/chart/Chart.tsx","presentation/detail/Detail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RunnerContext","createContext","runner","undefined","runs","setRunner","setRuns","addRun","run","RunnerContextProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_jsx","Provider","value","oldState","length","concat","_toConsumableArray","LocalStorageKeys","createRunnerRepository","getRunner","localStorage","getItem","RUNNER","JSON","parse","setItem","stringify","removeRunner","removeItem","Styles","Login","props","runnerName","setRunnerName","runnerRepository","useContext","_jsxs","LoginContainer","LoginHeader","LoginName","type","onChange","e","target","placeholder","LoginButton","onClick","console","log","newRunner","runnerRunIds","styled","h3","_templateObject","_taggedTemplateLiteral","FONT_FAMILY_MAIN","FONT_SIZE_LARGER","div","_templateObject2","input","_templateObject3","button","_templateObject4","createMapService","calcArea","polygonPoints","points","map","trackPoint","latitude","longitude","poly","polygon","area","track2Polygon","trackPoints","calcDistance","startTrackPoint","endTrackPoint","start","LatLng","end","distanceTo","RenderRuns","mapService","_Fragment","index","Polyline","positions","track","createSensorRepository","observeMeasurement","Observable","observer","navigator","geolocation","watchPosition","geoPosition","position","coords","speed","altitude","next","err","error","enableHighAccuracy","RenderPosition","setPosition","subscription","setSubscription","useMap","sensorRepository","useEffect","subscribe","m","lat","lng","setView","unsubscribe","Marker","ShowRunControl","setShowRuns","className","Map","_objectDestructuringEmpty","showRuns","RunMap","center","zoom","scrollWheelZoom","TileLayer","attribution","url","MapContainer","CurrentRunContext","CurrentRunContextProvider","startTime","setStartTime","_useState5","_useState6","setTrackPoints","_useState7","_useState8","distances","setDistances","_useState9","_useState10","setRun","_useState11","_useState12","isRunning","setIsRunning","addTrackPoint","createNewTrackPoint","distance","time","Date","now","startRun","serviceWorker","controller","postMessage","stopRun","Promise","resolve","finishedRun","runId","uuid","endTime","pauseRun","resetRun","createRunRepository","storageRuns","RUNS","saveRuns","getAllRuns","deleteRuns","getRun","filter","pop","Popup","show","setShow","PopupContainer","MessageContainer","Button","BACKGROUND_COLOR_SECOND","_ref2","FONT_SIZE_NORMAL","CurrentRunControls","_useContext","_useContext2","runRepository","Buttons","StartButton","EndButton","then","ButtonBase","InfoCard","property","Container","Property","Value","Content","Dashboard","runTime","setRunTime","setSpeed","runInterval","setRunInterval","id","setInterval","clearInterval","toFixed","toISOString","substr","StartRun","SwipeOverlay","startPosition","setStartPosition","isActive","setIsActive","onTouchStart","targetTouches","clientX","onTouchMove","moveX","_ref3","_ref4","Path","AbsolvedRun","deleteCallback","OuterContainer","FontAwesomeIcon","icon","faTrash","AbsolvedRunMap","startPoint","centerFromRun","dragging","zoomControl","InfoContainer","ValueIconContainer","faCalendar","ValueContainer","toDateString","faClock","faRoute","reduce","acc","val","DetailButton","to","Link","_templateObject5","_templateObject6","Pagination","n","setOuterStartIndex","setOuterEndIndex","pageSize","setStartIndex","setEndIndex","Math","ceil","maxPage","currentPage","setCurrentPage","newStartindex","newEndindex","changeCurrentPageByButton","change","validateCurrentPage","newPage","PaginationContainer","ChangeButton","PageInput","currentTarget","MaxPage","AbsolvedRuns","startIndex","endIndex","slice","useRunsController","initRuns","initRunner","deleteAll","Menu","DropDownButton","faBars","DropDownContent","MenuButton","BACKGROUND_COLOR_MAIN","Header","HeaderContainer","Logo","HEADER_HEIGHT","h2","FONT_SIZE_LARGE","Home","Welcome","BottomNavigation","NavButton","CustomLink","ROOT","faHome","NEW","faPlusSquare","faRunning","faUserFriends","faCog","BOTTOM_NAVIGATION_HEIGHT","ChartData","_createClass","dataKey","name","displayName","_classCallCheck","_class","DISTANCE","SPEED","ALTITUDE","Gradient","color","x1","y1","x2","y2","offset","stopColor","stopOpacity","DataSelector","dataOptions","setData","title","backgroundColor","showOptions","setShowOption","handleOptionClick","selectedOption","option","Error","findOption","textContent","DataChooser","Title","DataOptions","DataOption","ul","li","Chart","dataLeft","setDataLeft","dataRight","setDataRight","distanceCumSum","cumsum","data","i","_run$track$trackPoint","_run$track$trackPoint2","push","parseInt","ResponsiveContainer","width","height","minHeight","AreaChart","BACKGROUND_COLOR_THIRD","XAxis","stroke","interval","tick","fontSize","dy","angle","style","FONT_SIZE_SMALL","Tooltip","contentStyle","borderRadius","opacity","maxHeight","CartesianGrid","vertical","strokeDasharray","YAxis","yAxisId","orientation","dx","Area","fillOpacity","fill","DataChoosers","Detail","useParams","useMemo","Heading","toLocaleString","h1","PageContainer","App","runsController","useHref","Routes","Route","path","element","DETAIL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","publicUrl","process","register","registration","scope","catch","requestNotificationPermission","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","Notification","requestPermission","sent","stop","apply","arguments","ReactDOM","render","React","StrictMode","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.46274d5c.chunk.js","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { Runner } from \"../domain/runner/Runner\";\r\nimport { Run } from \"../domain/run/Run\";\r\n\r\ninterface RunnerProps {\r\n  runner: Runner | undefined;\r\n  setRunner: (runner: Runner | undefined) => void;\r\n  runs: Run[];\r\n  setRuns: (runs: Run[]) => void;\r\n  addRun: (run: Run) => void;\r\n}\r\n\r\nexport const RunnerContext = createContext<RunnerProps>({\r\n  runner: undefined,\r\n  runs: [],\r\n  setRunner(runner: Runner | undefined): void {},\r\n  setRuns(runs: Run[]): void {},\r\n  addRun(run: Run): void {},\r\n});\r\n\r\ninterface ProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const RunnerContextProvider = ({ children }: ProviderProps) => {\r\n  const [runs, setRuns] = useState<Run[]>([]);\r\n  const [runner, setRunner] = useState<Runner | undefined>();\r\n\r\n  const addRun = (run: Run) => {\r\n    setRuns((oldState: Run[]) =>\r\n      oldState.length > 0 ? [...oldState, run] : [run]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <RunnerContext.Provider\r\n      value={{\r\n        runner,\r\n        setRunner,\r\n        runs,\r\n        setRuns,\r\n        addRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </RunnerContext.Provider>\r\n  );\r\n};\r\n","export enum LocalStorageKeys {\r\n  RUNNER = \"runner\",\r\n  RUNS = \"runs\",\r\n}\r\n","import { Runner } from \"./Runner\";\r\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\r\n\r\nexport interface RunnerRepository {\r\n  getRunner: () => Runner | undefined;\r\n  setRunner: (runner: Runner) => void;\r\n  removeRunner: () => void;\r\n}\r\n\r\nexport const createRunnerRepository = (): RunnerRepository => {\r\n  const getRunner = () => {\r\n    const runner = localStorage.getItem(LocalStorageKeys.RUNNER);\r\n    return runner ? (JSON.parse(runner) as Runner) : undefined;\r\n  };\r\n\r\n  const setRunner = (runner: Runner) => {\r\n    localStorage.setItem(LocalStorageKeys.RUNNER, JSON.stringify(runner));\r\n  };\r\n\r\n  const removeRunner = () => {\r\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\r\n  };\r\n\r\n  return {\r\n    getRunner,\r\n    setRunner,\r\n    removeRunner,\r\n  };\r\n};\r\n","export enum Styles {\r\n  FONT_FAMILY_MAIN = \"Open Sans Condensed, sans-serif\",\r\n  BACKGROUND_COLOR_MAIN = \"#343a40\",\r\n  BACKGROUND_COLOR_SECOND = \"#5f9ea0\",\r\n  BACKGROUND_COLOR_THIRD = \"#ff8c00\",\r\n  FONT_SIZE_SMALL = \"0.75rem\",\r\n  FONT_SIZE_NORMAL = \"1rem\",\r\n  FONT_SIZE_LARGER = \"1.25rem\",\r\n  FONT_SIZE_LARGE = \"1.5rem\",\r\n  BOTTOM_NAVIGATION_HEIGHT = \"4rem\",\r\n  MAP_HEIGHT_SIZE = \"60%\",\r\n  HEADER_HEIGHT = \"4rem\",\r\n}\r\n","import * as React from \"react\";\r\nimport { useContext, useState } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\ntype Props = {};\r\nexport const Login = (props: Props) => {\r\n  const [runnerName, setRunnerName] = useState<string>(\"\");\r\n  const runnerRepository = createRunnerRepository();\r\n  const { setRunner } = useContext(RunnerContext);\r\n\r\n  const clickHandle = () => {\r\n    console.log(\"Login \" + runnerName);\r\n    const newRunner = { runnerName: runnerName, runnerRunIds: [] };\r\n    runnerRepository.setRunner(newRunner);\r\n    setRunner(newRunner);\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginHeader>Willkommen!</LoginHeader>\r\n      <LoginName\r\n        type={\"text\"}\r\n        onChange={(e) => {\r\n          setRunnerName(e.target.value);\r\n        }}\r\n        value={runnerName}\r\n        placeholder={\"Wie heißt du?\"}\r\n      />\r\n      <LoginButton onClick={clickHandle}>Login</LoginButton>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nconst LoginHeader = styled.h3`\r\n  font-family: ${Styles.FONT_FAMILY_MAIN};\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n  text-transform: uppercase;\r\n  color: #343a40;\r\n  font-weight: bold;\r\n  margin: 0 0 30% 0;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  width: 20%;\r\n  min-width: 300px;\r\n  height: 80%;\r\n  min-height: 500px;\r\n  background-color: aliceblue;\r\n  border-radius: 10px;\r\n  box-shadow: 10px 10px #282c34;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10% auto auto auto;\r\n`;\r\n\r\nconst LoginName = styled.input`\r\n  width: 70%;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  margin: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nconst LoginButton = styled.button`\r\n  width: 70%;\r\n  height: 50px;\r\n  background-color: #343a40;\r\n  color: white;\r\n  border-radius: 10px;\r\n  margin: 5px;\r\n`;\r\n","import { TrackPoint } from \"../run/TrackPoint\";\r\nimport { LatLng, LatLngTuple } from \"leaflet\";\r\nimport { area, polygon } from \"@turf/turf\";\r\nimport { getDistance } from \"geolib\";\r\n\r\nexport interface MapService {\r\n  track2Polygon: (trackPoints: TrackPoint[]) => LatLngTuple[];\r\n  calcArea: (polygonPoints: TrackPoint[]) => number;\r\n  calcDistance: (startPoint: TrackPoint, endPoint: TrackPoint) => number;\r\n}\r\n\r\nexport const createMapService = (): MapService => {\r\n  const track2Polygon = (trackPoints: TrackPoint[]): LatLngTuple[] => {\r\n    return trackPoints.map((trackPoint) => {\r\n      return [trackPoint.latitude, trackPoint.longitude];\r\n    });\r\n  };\r\n\r\n  const calcArea = (polygonPoints: TrackPoint[]): number => {\r\n    let points: any = polygonPoints.map((trackPoint) => {\r\n      return [trackPoint.latitude, trackPoint.longitude];\r\n    });\r\n    let poly = polygon([points]);\r\n    return area(poly) / 1000000; // from m^2 to km^2\r\n  };\r\n\r\n  const calcDistance = (\r\n    startTrackPoint: TrackPoint,\r\n    endTrackPoint: TrackPoint\r\n  ) => {\r\n    const start = new LatLng(\r\n      startTrackPoint.latitude,\r\n      startTrackPoint.longitude\r\n    );\r\n    const end = new LatLng(endTrackPoint.latitude, endTrackPoint.longitude);\r\n\r\n    return start.distanceTo(end);\r\n  };\r\n\r\n  return { calcArea, track2Polygon, calcDistance };\r\n};\r\n","import { Polyline } from \"react-leaflet\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { Run } from \"../../../domain/run/Run\";\r\nimport { createMapService } from \"../../../domain/map/MapService\";\r\n\r\ninterface Props {\r\n  runs: Run[];\r\n}\r\n\r\nexport const RenderRuns: FunctionComponent<Props> = ({ runs }: Props) => {\r\n  const mapService = createMapService();\r\n\r\n  return (\r\n    <>\r\n      {runs.map((run, index) => {\r\n        return (\r\n          <Polyline\r\n            positions={mapService.track2Polygon(run.track.trackPoints)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import { LatLng } from \"leaflet\";\r\nimport { Observable } from \"rxjs\";\r\n\r\ninterface SensorRepository {\r\n  observeMeasurement: Observable<SensorMeasurement>;\r\n}\r\n\r\nexport type SensorMeasurement = {\r\n  position: LatLng;\r\n  speed: number | undefined;\r\n  altitude: number | undefined;\r\n};\r\n\r\nexport const createSensorRepository = (): SensorRepository => {\r\n  const observeMeasurement = new Observable<SensorMeasurement>((observer) => {\r\n    navigator.geolocation.watchPosition(\r\n      (geoPosition: GeolocationPosition) => {\r\n        const position = new LatLng(\r\n          geoPosition.coords.latitude,\r\n          geoPosition.coords.longitude\r\n        );\r\n        const speed = geoPosition.coords.speed\r\n          ? geoPosition.coords.speed * 3.6\r\n          : undefined;\r\n        const altitude = geoPosition.coords.altitude\r\n          ? geoPosition.coords.altitude\r\n          : undefined;\r\n        observer.next({ position, speed, altitude });\r\n      },\r\n      (err: any) => console.error(err),\r\n      { enableHighAccuracy: true }\r\n    );\r\n  });\r\n  return { observeMeasurement };\r\n};\r\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { Marker, useMap } from \"react-leaflet\";\r\nimport { RunnerContext } from \"../../../context/RunnerContext\";\r\nimport { createSensorRepository } from \"../../../domain/sensor/SensorRepository\";\r\nimport { LatLng } from \"leaflet\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\ninterface Props {}\r\n\r\nexport const RenderPosition: FunctionComponent<Props> = () => {\r\n  const [position, setPosition] = useState<LatLng>();\r\n  const [subscription, setSubscription] = useState<Subscription>();\r\n  const map = useMap();\r\n  const sensorRepository = createSensorRepository();\r\n\r\n  useEffect(() => {\r\n    setSubscription(\r\n      sensorRepository.observeMeasurement.subscribe((m) => {\r\n        const position = new LatLng(m.position.lat, m.position.lng);\r\n        setPosition(position);\r\n        map.setView(position);\r\n      })\r\n    );\r\n    return () => {\r\n      subscription && subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return <>{position && <Marker position={position} />}</>;\r\n};\r\n","import { FunctionComponent } from \"react\";\r\n\r\ninterface Props {\r\n  setShowRuns: any;\r\n}\r\n\r\nconst ShowRunControl: FunctionComponent<Props> = ({ setShowRuns }: Props) => {\r\n  return (\r\n    <div className=\"leaflet-top leaflet-right\">\r\n      <div className=\"leaflet-control\">\r\n        <button onClick={() => setShowRuns((oldState: any) => !oldState)}>\r\n          Show Runs\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowRunControl;\r\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport { RunnerContext } from \"../../../context/RunnerContext\";\r\nimport { RenderRuns } from \"./RenderRuns\";\r\nimport { RenderPosition } from \"./RenderPosition\";\r\nimport ShowRunControl from \"./ShowRunControl\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../../shared/Styles\";\r\n\r\ninterface Props {}\r\n\r\nexport const Map: FunctionComponent<Props> = ({}: Props) => {\r\n  const { runs } = useContext(RunnerContext);\r\n  const [showRuns, setShowRuns] = useState(false);\r\n\r\n  return (\r\n    <RunMap\r\n      className=\"basicMap\"\r\n      center={[0, 0]}\r\n      zoom={20}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n      />\r\n      {showRuns && <RenderRuns runs={runs} />}\r\n      <RenderPosition />\r\n      <ShowRunControl setShowRuns={setShowRuns} />\r\n    </RunMap>\r\n  );\r\n};\r\n\r\nconst RunMap = styled(MapContainer)`\r\n  width: 100%;\r\n  height: 75%;\r\n`;\r\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { Run } from \"../domain/run/Run\";\r\nimport { TrackPoint } from \"../domain/run/TrackPoint\";\r\nimport { uuid } from \"uuidv4\";\r\nimport { Distance } from \"../domain/run/Distance\";\r\nimport { createMapService } from \"../domain/map/MapService\";\r\nimport {\r\n  createSensorRepository,\r\n  SensorMeasurement,\r\n} from \"../domain/sensor/SensorRepository\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\ninterface CurrentRunProps {\r\n  startTime: number | undefined;\r\n  run: Run | undefined;\r\n  startRun: () => void;\r\n  stopRun: () => Promise<Run | undefined>;\r\n  pauseRun: () => void;\r\n  addTrackPoint: (trackPoint: TrackPoint) => void;\r\n  resetRun: () => void;\r\n  isRunning: boolean;\r\n  setIsRunning: (isRunning: boolean) => void;\r\n}\r\nexport const CurrentRunContext = createContext<CurrentRunProps>(\r\n  {} as CurrentRunProps\r\n);\r\n\r\ninterface ProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CurrentRunContextProvider = ({ children }: ProviderProps) => {\r\n  const [subscription, setSubscription] = useState<Subscription>();\r\n  const [startTime, setStartTime] = useState<number>();\r\n  const [trackPoints, setTrackPoints] = useState<TrackPoint[]>([]);\r\n  const [distances, setDistances] = useState<Distance[]>([]);\r\n  const [run, setRun] = useState<Run>();\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const mapService = createMapService();\r\n  const sensorRepository = createSensorRepository();\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      setSubscription(\r\n        sensorRepository.observeMeasurement.subscribe((m) =>\r\n          addTrackPoint(createNewTrackPoint(m))\r\n        )\r\n      );\r\n    } else {\r\n      subscription && subscription.unsubscribe();\r\n    }\r\n  }, [isRunning]);\r\n\r\n  useEffect(() => {\r\n    if (trackPoints.length > 0) {\r\n      //otherwise we would have more distances than trackpoints\r\n      const distance =\r\n        trackPoints.length > 1\r\n          ? mapService.calcDistance(\r\n              trackPoints[trackPoints.length - 2],\r\n              trackPoints[trackPoints.length - 1]\r\n            ) / 1000 // m --> km\r\n          : 0;\r\n      setDistances((oldState) => [...oldState, { distance: distance }]);\r\n    }\r\n  }, [trackPoints]);\r\n\r\n  const createNewTrackPoint = (m: SensorMeasurement): TrackPoint => {\r\n    return {\r\n      latitude: m.position.lat,\r\n      longitude: m.position.lng,\r\n      altitude: m.altitude,\r\n      speed: m.speed,\r\n      time: Date.now(),\r\n    };\r\n  };\r\n\r\n  const resetRun = () => {\r\n    setRun(undefined);\r\n    setStartTime(undefined);\r\n    setTrackPoints([]);\r\n  };\r\n\r\n  const addTrackPoint = (trackPoint: TrackPoint) => {\r\n    console.log(\"Add TrackPoint: \", trackPoint);\r\n    setTrackPoints((oldState) => [...oldState, trackPoint]);\r\n  };\r\n\r\n  const startRun = () => {\r\n    if ('serviceWorker' in navigator && navigator.serviceWorker.controller) {\r\n      navigator.serviceWorker.controller.postMessage(\"whatuuup\");\r\n    }\r\n    console.log(\"Start Run\");\r\n    !startTime && setStartTime(Date.now());\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const pauseRun = () => {\r\n    console.log(\"Pause Run\");\r\n    setIsRunning(false);\r\n  };\r\n\r\n  const stopRun = (): Promise<Run | undefined> => {\r\n    console.log(\"Stop Run\");\r\n    if (trackPoints.length === 0) return Promise.resolve(undefined);\r\n    const track = { trackPoints, distances };\r\n    const finishedRun = {\r\n      runId: uuid(),\r\n      track: track,\r\n      startTime: startTime ? startTime : Date.now(),\r\n      endTime: Date.now(),\r\n    };\r\n    setRun(finishedRun);\r\n    setIsRunning(false);\r\n    setTrackPoints([]);\r\n    setStartTime(undefined);\r\n    setDistances([]);\r\n    return Promise.resolve(finishedRun);\r\n  };\r\n\r\n  return (\r\n    <CurrentRunContext.Provider\r\n      value={{\r\n        startTime,\r\n        isRunning,\r\n        setIsRunning,\r\n        run,\r\n        startRun,\r\n        stopRun,\r\n        pauseRun,\r\n        addTrackPoint,\r\n        resetRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </CurrentRunContext.Provider>\r\n  );\r\n};\r\n","import { Run } from \"./Run\";\r\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\r\n\r\nexport interface RunRepository {\r\n  getAllRuns: () => Run[];\r\n  saveRuns: (runs: Run[]) => void;\r\n  deleteRuns: () => void;\r\n  getRun: (runId: string) => Run | undefined;\r\n}\r\n\r\nexport const createRunRepository = (): RunRepository => {\r\n  const storageRuns = localStorage.getItem(LocalStorageKeys.RUNS);\r\n  const runs: Run[] = storageRuns ? JSON.parse(storageRuns) : [];\r\n\r\n  const getAllRuns = (): Run[] => {\r\n    return runs;\r\n  };\r\n\r\n  const saveRuns = (runs: Run[]): void => {\r\n    localStorage.setItem(LocalStorageKeys.RUNS, JSON.stringify(runs));\r\n  };\r\n\r\n  const deleteRuns = (): void => {\r\n    localStorage.removeItem(LocalStorageKeys.RUNS);\r\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\r\n  };\r\n\r\n  const getRun = (runId: string): Run | undefined => {\r\n    return runs.filter((run) => run.runId === runId).pop();\r\n  };\r\n\r\n  return { saveRuns, getAllRuns, deleteRuns, getRun };\r\n};\r\n","import { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  setShow: (show: boolean) => void;\r\n}\r\n\r\nexport const Popup: FunctionComponent<Props> = ({ show, setShow }) => {\r\n  return (\r\n    <PopupContainer show={show}>\r\n      <MessageContainer>Strecke gespeichert!</MessageContainer>\r\n      <Button onClick={() => setShow(false)}>Nice</Button>\r\n    </PopupContainer>\r\n  );\r\n};\r\nconst MessageContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: white;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 2px 0 10px 0;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  border-radius: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: center;\r\n  width: 30vw;\r\n  color: black;\r\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\r\n`;\r\n\r\ninterface ContainerProps {\r\n  show: boolean;\r\n}\r\n\r\nconst PopupContainer = styled.div<ContainerProps>`\r\n  width: 70vw;\r\n  border-radius: 5px;\r\n  border: 1px solid black;\r\n  position: absolute;\r\n  background-color: #343a40;\r\n  color: white;\r\n  top: 50%;\r\n  left: calc(50% - 70vw * 0.5);\r\n  visibility: ${({ show }: ContainerProps) => (show ? \"visible\" : \"hidden\")};\r\n  z-index: 500;\r\n  padding: 8px 10px;\r\n  font-weight: bolder;\r\n  font-size: ${Styles.FONT_SIZE_NORMAL};\r\n`;\r\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { Popup } from \"./Popup\";\r\n\r\ninterface Props {}\r\n\r\nexport const CurrentRunControls: FunctionComponent<Props> = () => {\r\n  const [show, setShow] = useState(false);\r\n  const { addTrackPoint, startRun, stopRun, pauseRun, isRunning } =\r\n    useContext(CurrentRunContext);\r\n  const { addRun, runs } = useContext(RunnerContext);\r\n  const runRepository = createRunRepository();\r\n\r\n  const handleStart = () => {\r\n    isRunning ? pauseRun() : startRun();\r\n  };\r\n\r\n  const handleSave = () => {\r\n    stopRun().then((finishedRun) => {\r\n      console.log(\"Save run\");\r\n      if (finishedRun) {\r\n        if (runs.length > 0) {\r\n          runRepository.saveRuns([...runs, finishedRun]);\r\n        } else {\r\n          runRepository.saveRuns([finishedRun]);\r\n        }\r\n        addRun(finishedRun);\r\n        setShow(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Buttons>\r\n        <StartButton onClick={handleStart}>\r\n          {isRunning ? \"Pause\" : \"Start\"}\r\n        </StartButton>\r\n        <EndButton onClick={handleSave}>End</EndButton>\r\n      </Buttons>\r\n      <Popup show={show} setShow={setShow} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Buttons = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n  color: black;\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ButtonBase = styled.button`\r\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\r\n  font-size: ${Styles.FONT_SIZE_NORMAL};\r\n  color: inherit;\r\n  border: none;\r\n  padding: 10px 0;\r\n  font-weight: bolder;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StartButton = styled(ButtonBase)`\r\n  width: 65%;\r\n`;\r\n\r\nconst EndButton = styled(ButtonBase)`\r\n  width: 35%;\r\n`;\r\n","import * as React from \"react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\ntype Props = {\r\n  property: string;\r\n  value: string | number;\r\n};\r\n\r\nexport const InfoCard = ({ property, value }: Props) => {\r\n  return (\r\n    <Container>\r\n      <Property>{property}</Property>\r\n      <Value>{value}</Value>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 50%;\r\n  min-width: 120px;\r\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\r\n  padding: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  font-family: Open Sans Condensed, sans-serif;\r\n  font-weight: bolder;\r\n  color: black;\r\n`;\r\n\r\nconst Property = styled(Content)`\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n`;\r\n\r\nconst Value = styled(Content)`\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n`;\r\n","import * as React from \"react\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\r\nimport { InfoCard } from \"./InfoCard\";\r\nimport styled from \"styled-components\";\r\nimport { createSensorRepository } from \"../../domain/sensor/SensorRepository\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\nexport const Dashboard = () => {\r\n  const { startTime, isRunning } = useContext(CurrentRunContext);\r\n  const [runTime, setRunTime] = useState(0);\r\n  const [speed, setSpeed] = useState(0);\r\n  const [runInterval, setRunInterval] = useState<any>();\r\n  const [subscription, setSubscription] = useState<Subscription>();\r\n  const sensorRepository = createSensorRepository();\r\n\r\n  const updateRunTime = () => {\r\n    startTime && setRunTime(Date.now() - startTime);\r\n  };\r\n  if (isRunning) {\r\n  } else {\r\n  }\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      // Subscribe to velocity\r\n      setSubscription(\r\n        sensorRepository.observeMeasurement.subscribe(\r\n          (m) => m.speed && setSpeed(m.speed)\r\n        )\r\n      );\r\n      const id = setInterval(() => {\r\n        updateRunTime();\r\n      }, 1000);\r\n      setRunInterval(id);\r\n    } else {\r\n      subscription && subscription.unsubscribe();\r\n      runInterval && clearInterval(runInterval);\r\n      setRunTime(0);\r\n    }\r\n  }, [isRunning]);\r\n\r\n  return (\r\n    <Container>\r\n      <InfoCard property={\"Speed\"} value={speed.toFixed(1) + \" km/h\"} />\r\n      <InfoCard\r\n        property={\"Time\"}\r\n        value={new Date(runTime).toISOString().substr(11, 8)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 15%;\r\n  flex-wrap: wrap;\r\n`;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Map } from \"../map/component/Map\";\r\nimport { CurrentRunControls } from \"../controls/CurrentRunControls\";\r\nimport { Dashboard } from \"../dashboard/Dashboard\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\ninterface Props {}\r\n\r\nexport const StartRun: FunctionComponent<Props> = () => {\r\n  return (\r\n    <>\r\n      <Dashboard />\r\n      <Map />\r\n      <CurrentRunControls />\r\n    </>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\nexport const SwipeOverlay: FunctionComponent = ({ children }) => {\r\n  const [startPosition, setStartPosition] = useState<number>();\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const touchMoveHandle = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    const moveX = e.targetTouches[0].clientX;\r\n    if (startPosition! - moveX > 50) {\r\n      setIsActive(true);\r\n    }\r\n    if (startPosition! - moveX < -50) {\r\n      setIsActive(false);\r\n    }\r\n  };\r\n\r\n  const touchStartHandle = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    setStartPosition(e.targetTouches[0].clientX);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      onTouchStart={touchStartHandle}\r\n      onTouchMove={touchMoveHandle}\r\n      isActive={isActive}\r\n    >\r\n      {isActive && children}\r\n    </Container>\r\n  );\r\n};\r\n\r\ninterface OverlayProps {\r\n  isActive: boolean;\r\n}\r\n\r\nconst Container = styled.div<OverlayProps>`\r\n  /*\r\n  display: ${({ isActive }: OverlayProps) => (isActive ? \"block\" : \"none\")};\r\n*/\r\n  display: flex;\r\n  color: white;\r\n  width: inherit;\r\n  height: 100%;\r\n  z-index: ${({ isActive }: OverlayProps) => (isActive ? 50 : 30)};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  border-radius: 5px;\r\n  background-color: ${({ isActive }: OverlayProps) =>\r\n    isActive ? \"rgba(52, 58, 64, 0.9)\" : \"rgba(52, 58, 64, 0)\"};\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","export enum Path {\r\n  ROOT = \"/\",\r\n  NEW = \"/new\",\r\n  RUNS = \"/runs\",\r\n  DETAIL = \"/runs/:runId\",\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\r\nimport { Run } from \"../../domain/run/Run\";\r\nimport { createMapService } from \"../../domain/map/MapService\";\r\nimport { LatLng } from \"leaflet\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendar,\r\n  faClock,\r\n  faRoute,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { SwipeOverlay } from \"../util/SwipeOverlay\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Path } from \"../shared/Path\";\r\ninterface Props {\r\n  run: Run;\r\n  deleteCallback: (runId: string) => void;\r\n}\r\n\r\nexport const AbsolvedRun: FunctionComponent<Props> = ({\r\n  run,\r\n  deleteCallback,\r\n}) => {\r\n  const centerFromRun = (run: Run): LatLng => {\r\n    const startPoint = run.track.trackPoints[0];\r\n    return new LatLng(startPoint.latitude, startPoint.longitude);\r\n  };\r\n\r\n  const mapService = createMapService();\r\n\r\n  return (\r\n    <OuterContainer>\r\n      <SwipeOverlay>\r\n        <FontAwesomeIcon\r\n          onClick={() => deleteCallback(run.runId)}\r\n          icon={faTrash}\r\n        />\r\n      </SwipeOverlay>\r\n\r\n      <AbsolvedRunMap\r\n        className=\"basicMap\"\r\n        center={centerFromRun(run)}\r\n        zoom={20}\r\n        dragging={false}\r\n        zoomControl={false}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n        />\r\n        <Polyline positions={mapService.track2Polygon(run.track.trackPoints)} />\r\n      </AbsolvedRunMap>\r\n      <InfoContainer>\r\n        <ValueIconContainer>\r\n          <FontAwesomeIcon icon={faCalendar} />\r\n          <ValueContainer>\r\n            {new Date(run.startTime).toDateString()}\r\n          </ValueContainer>\r\n        </ValueIconContainer>\r\n        <ValueIconContainer>\r\n          <FontAwesomeIcon icon={faClock} />\r\n          <ValueContainer>\r\n            {new Date(run.endTime - run.startTime).toISOString().substr(11, 8)}\r\n          </ValueContainer>\r\n        </ValueIconContainer>\r\n        <ValueIconContainer>\r\n          <FontAwesomeIcon icon={faRoute} />\r\n          <ValueContainer>\r\n            {run.track.distances\r\n              .map((value) => value.distance)\r\n              .reduce((acc, val) => acc + val)\r\n              .toFixed(1) + \" km\"}\r\n          </ValueContainer>\r\n        </ValueIconContainer>\r\n        <DetailButton to={Path.RUNS + \"/\" + run.runId}>Details</DetailButton>\r\n      </InfoContainer>\r\n    </OuterContainer>\r\n  );\r\n};\r\n\r\nconst DetailButton = styled(Link)`\r\n  text-align: center;\r\n  max-width: 150px;\r\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\r\n  color: #282c34;\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: 5px 5px 10px #282c34;\r\n  &:active {\r\n    box-shadow: 0 0;\r\n  }\r\n  z-index: 40;\r\n`;\r\n\r\nconst ValueIconContainer = styled.div`\r\n  color: white;\r\n  font-size: ${Styles.FONT_SIZE_NORMAL};\r\n  font-family: ${Styles.FONT_FAMILY_MAIN};\r\n  display: inline-flex;\r\n  margin: 5px;\r\n`;\r\n\r\nconst ValueContainer = styled.div`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst OuterContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  box-shadow: 5px 5px 5px #282c34;\r\n  border-radius: 5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  width: 50%;\r\n  padding-left: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst AbsolvedRunMap = styled(MapContainer)`\r\n  width: 130px;\r\n  height: 130px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  margin: 5px;\r\n  z-index: 0;\r\n`;\r\n","import React, {\r\n  Dispatch,\r\n  FunctionComponent,\r\n  SetStateAction,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\r\nimport { Run } from \"../../domain/run/Run\";\r\nimport { createMapService } from \"../../domain/map/MapService\";\r\nimport { LatLng } from \"leaflet\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendar,\r\n  faClock,\r\n  faRoute,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n  n: number;\r\n  setOuterStartIndex: (endIndex: number | undefined) => void;\r\n  setOuterEndIndex: (endIndex: number | undefined) => void;\r\n}\r\n\r\nexport const Pagination: FunctionComponent<Props> = ({\r\n  n,\r\n  setOuterStartIndex,\r\n  setOuterEndIndex,\r\n}) => {\r\n  const [pageSize, setPageSize] = useState(3);\r\n  const [startIndex, setStartIndex] = useState(0);\r\n  const [endIndex, setEndIndex] = useState(pageSize);\r\n  const [maxPage, setMaxPage] = useState(Math.ceil(n / pageSize));\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    let newStartindex = (currentPage - 1) * pageSize;\r\n    let newEndindex =\r\n      newStartindex + pageSize > n ? n : newStartindex + pageSize;\r\n\r\n    setStartIndex(newStartindex);\r\n    setOuterStartIndex(newStartindex);\r\n    setEndIndex(newEndindex);\r\n    setOuterEndIndex(newEndindex);\r\n  }, [pageSize, currentPage]);\r\n\r\n  const changeCurrentPageByButton = (change: number) => {\r\n    setCurrentPage(validateCurrentPage(currentPage + change));\r\n  };\r\n\r\n  const changeCurrentPageByInput = (e: React.FormEvent<HTMLInputElement>) => {\r\n    setCurrentPage(validateCurrentPage(+e.currentTarget.value));\r\n  };\r\n\r\n  const validateCurrentPage = (newPage: number): number => {\r\n    if (newPage > maxPage) {\r\n      newPage = maxPage;\r\n    }\r\n    if (newPage < 1) {\r\n      newPage = 1;\r\n    }\r\n    return newPage;\r\n  };\r\n\r\n  return (\r\n    <PaginationContainer>\r\n      <ChangeButton onClick={() => changeCurrentPageByButton(-1)}>\r\n        {\"<\"}\r\n      </ChangeButton>\r\n      <PageInput onChange={changeCurrentPageByInput} value={currentPage} />\r\n      <MaxPage> / {maxPage}</MaxPage>\r\n      <ChangeButton onClick={() => changeCurrentPageByButton(1)}>\r\n        {\">\"}\r\n      </ChangeButton>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nconst ChangeButton = styled.button`\r\n  background-color: #343a40;\r\n  color: white;\r\n  border: 1px white;\r\n`;\r\nconst MaxPage = styled.div`\r\n  font-size: inherit;\r\n  width: 30px;\r\n  padding: 2px 5px;\r\n`;\r\n\r\nconst PageInput = styled.input`\r\n  width: 25px;\r\n  text-align: center;\r\n  font-size: inherit;\r\n`;\r\nconst PaginationContainer = styled.div`\r\n  color: white;\r\n  display: flex;\r\n  font-size: ${Styles.FONT_SIZE_NORMAL};\r\n  float: right;\r\n  margin-bottom: 10px;\r\n`;\r\n","import React, { FunctionComponent, useContext, useState } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport { AbsolvedRun } from \"./AbsolvedRun\";\r\nimport { Pagination } from \"./Pagination\";\r\n\r\ninterface Props {}\r\n\r\nexport const AbsolvedRuns: FunctionComponent<Props> = () => {\r\n  const { runs, setRuns } = useContext(RunnerContext);\r\n  const [startIndex, setStartIndex] = useState<number>();\r\n  const [endIndex, setEndIndex] = useState<number>();\r\n\r\n  const deleteCallback = (runId: string) => {\r\n    setRuns(runs.filter((run) => run.runId != runId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pagination\r\n        n={runs.length}\r\n        setOuterStartIndex={setStartIndex}\r\n        setOuterEndIndex={setEndIndex}\r\n      />\r\n\r\n      {runs.slice(startIndex, endIndex).map((run) => (\r\n        <AbsolvedRun\r\n          key={run.runId}\r\n          run={run}\r\n          deleteCallback={deleteCallback}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { createRunRepository } from \"../../domain/run/RunRepository\";\r\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\n\r\nexport interface RunsController {\r\n  initRuns: () => void;\r\n  initRunner: () => void;\r\n  removeRunner: () => void;\r\n  deleteAll: () => void;\r\n}\r\n\r\nexport const useRunsController = (): RunsController => {\r\n  const { setRunner, setRuns, runs } = useContext(RunnerContext);\r\n  const runRepository = createRunRepository();\r\n  const runnerRepository = createRunnerRepository();\r\n\r\n  useEffect(() => {\r\n    saveRuns();\r\n  }, [runs]);\r\n\r\n  const initRuns = () => {\r\n    setRuns(runRepository.getAllRuns());\r\n  };\r\n\r\n  const initRunner = () => {\r\n    setRunner(runnerRepository.getRunner());\r\n  };\r\n\r\n  const removeRunner = () => {\r\n    setRunner(undefined);\r\n    runnerRepository.removeRunner();\r\n  };\r\n\r\n  const saveRuns = () => {\r\n    runRepository.saveRuns(runs);\r\n  };\r\n\r\n  const deleteAll = () => {\r\n    runRepository.deleteRuns();\r\n  };\r\n\r\n  return { initRuns, initRunner, removeRunner, deleteAll };\r\n};\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { Path } from \"../shared/Path\";\r\nimport { NavLink } from \"./NavLink\";\r\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const Menu: FunctionComponent = () => {\r\n  const [show, setShow] = useState(false);\r\n  const controller = useRunsController();\r\n  return (\r\n    <DropDownButton onClick={() => setShow(!show)}>\r\n      <FontAwesomeIcon icon={faBars} />\r\n      <DropDownContent show={show}>\r\n        <MenuButton onClick={() => controller.deleteAll()}>Forget</MenuButton>\r\n        <MenuButton onClick={() => controller.removeRunner()}>\r\n          Logout\r\n        </MenuButton>\r\n      </DropDownContent>\r\n    </DropDownButton>\r\n  );\r\n};\r\n\r\nconst DropDownButton = styled.div`\r\n  padding-top: 5px;\r\n  position: relative;\r\n  display: inline-block;\r\n  color: white;\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n`;\r\n\r\ninterface Props {\r\n  show: boolean;\r\n}\r\nconst DropDownContent = styled.div<Props>`\r\n  color: white;\r\n  background-color: ${Styles.BACKGROUND_COLOR_MAIN};\r\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\r\n  position: absolute;\r\n  z-index: 500;\r\n  right: -200%;\r\n  box-shadow: 0px 0px 10px #282c34;\r\n  width: 100px;\r\n`;\r\nconst MenuButton = styled.div`\r\n  text-align: center;\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n  border: none;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: inherit;\r\n    color: white;\r\n  }\r\n`;\r\n","import * as React from \"react\";\r\nimport { Menu } from \"../navigation/Menu\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <Logo>Places</Logo>\r\n      <Menu />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nconst HeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: ${Styles.HEADER_HEIGHT};\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  padding: 10px 40px 5px 10px;\r\n`;\r\n\r\nconst Logo = styled.h2`\r\n  color: #eee;\r\n  font-family: ${Styles.FONT_FAMILY_MAIN};\r\n  font-size: ${Styles.FONT_SIZE_LARGE};\r\n  font-weight: bold;\r\n  line-height: 48px;\r\n  padding: 0 5px;\r\n  text-transform: uppercase;\r\n  min-width: 200px;\r\n`;\r\n","import * as React from \"react\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { createSensorRepository } from \"../../domain/sensor/SensorRepository\";\r\n\r\nexport const Home = () => {\r\n  const { runner } = useContext(RunnerContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Welcome>\r\n        Willkommen\r\n        <br />\r\n        {runner!.runnerName}\r\n      </Welcome>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Welcome = styled.h3`\r\n  font-family: ${Styles.FONT_FAMILY_MAIN};\r\n  text-align: center;\r\n  font-size: ${Styles.FONT_SIZE_LARGE};\r\n  color: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10% 0 0 0;\r\n`;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { Path } from \"../shared/Path\";\r\nimport { NavLink } from \"./NavLink\";\r\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBars,\r\n  faBiking,\r\n  faCog,\r\n  faHome,\r\n  faPlusSquare,\r\n  faRoute,\r\n  faRunning,\r\n  faUserFriends,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const BottomNavigation: FunctionComponent = () => {\r\n  return (\r\n    <Container>\r\n      <NavButton>\r\n        <CustomLink to={Path.ROOT}>\r\n          <FontAwesomeIcon icon={faHome} />\r\n        </CustomLink>\r\n      </NavButton>\r\n      <NavButton>\r\n        <CustomLink to={Path.NEW}>\r\n          <FontAwesomeIcon icon={faPlusSquare} />\r\n        </CustomLink>\r\n      </NavButton>\r\n      <NavButton>\r\n        <CustomLink to={Path.RUNS}>\r\n          <FontAwesomeIcon icon={faRunning} />\r\n        </CustomLink>\r\n      </NavButton>\r\n      <NavButton>\r\n        <FontAwesomeIcon icon={faUserFriends} />\r\n      </NavButton>\r\n      <NavButton>\r\n        <FontAwesomeIcon icon={faCog} />\r\n      </NavButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst CustomLink = styled(Link)`\r\n  color: inherit;\r\n  font-size: inherit;\r\n  &:hover {\r\n    color: white;\r\n    background-color: inherit;\r\n  }\r\n  &:focus {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background-color: #282c34;\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst NavButton = styled.button`\r\n  height: ${Styles.BOTTOM_NAVIGATION_HEIGHT};\r\n  width: 20%;\r\n  display: block;\r\n  color: #888;\r\n  text-align: center;\r\n  padding: 14px 16px;\r\n  text-decoration: none;\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n  border: none;\r\n  background-color: inherit;\r\n`;\r\n","export class ChartData {\r\n  static readonly DISTANCE = new ChartData(\r\n    \"distance\",\r\n    \"distance [km]\",\r\n    \"Distance\"\r\n  );\r\n  static readonly SPEED = new ChartData(\"speed\", \"speed [km/h]\", \"Speed\");\r\n  static readonly ALTITUDE = new ChartData(\r\n    \"altitude\",\r\n    \"altitude [m]\",\r\n    \"Altitude\"\r\n  );\r\n  private constructor(\r\n    public readonly dataKey: string,\r\n    public readonly name: string,\r\n    public readonly displayName: string\r\n  ) {}\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  color: string;\r\n}\r\nexport const Gradient: FunctionComponent<Props> = ({ color, id }) => {\r\n  return (\r\n    <linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n      <stop offset=\"5%\" stopColor={color} stopOpacity={0.8} />\r\n      <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n    </linearGradient>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useMemo, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../../../shared/Styles\";\r\nimport { ChartData } from \"../ChartData\";\r\n\r\ninterface Props {\r\n  dataOptions: ChartData[];\r\n  setData: (chartData: ChartData) => void;\r\n  title: string;\r\n  backgroundColor: string;\r\n}\r\n\r\nexport const DataSelector: FunctionComponent<Props> = ({\r\n  dataOptions,\r\n  setData,\r\n  title,\r\n  backgroundColor,\r\n}) => {\r\n  const [showOptions, setShowOption] = useState(false);\r\n\r\n  const findOption = (value: string): ChartData => {\r\n    const selectedOption = dataOptions.filter(\r\n      (option) => option.displayName === value\r\n    )[0];\r\n    if (!selectedOption) throw new Error(\"No suitable Option found\");\r\n    return selectedOption;\r\n  };\r\n\r\n  const handleOptionClick = (e: any) => {\r\n    const selectedOption = findOption(e.target.textContent);\r\n    setData(selectedOption);\r\n    setShowOption(!showOptions);\r\n  };\r\n\r\n  return (\r\n    <DataChooser onClick={() => setShowOption(!showOptions)}>\r\n      <Title backgroundColor={backgroundColor}>{title}</Title>\r\n      {showOptions && (\r\n        <DataOptions>\r\n          {dataOptions.map((option, index) => (\r\n            <DataOption key={index} onClick={handleOptionClick}>\r\n              {option.displayName}\r\n            </DataOption>\r\n          ))}\r\n        </DataOptions>\r\n      )}\r\n    </DataChooser>\r\n  );\r\n};\r\ninterface TitleProps {\r\n  backgroundColor: string;\r\n}\r\nconst DataChooser = styled.div``;\r\n\r\nconst Title = styled.div<TitleProps>`\r\n  color: black;\r\n  font-size: ${Styles.FONT_SIZE_NORMAL};\r\n  background-color: ${(props) => props.backgroundColor};\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\nconst DataOptions = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\nconst DataOption = styled.li`\r\n  cursor: pointer;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n`;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\n\r\nimport { Styles } from \"../../shared/Styles\";\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { ChartData } from \"./ChartData\";\r\nimport { Run } from \"../../../domain/run/Run\";\r\nimport { Gradient } from \"./elements/Gradient\";\r\nimport { DataSelector } from \"./elements/DataSelector\";\r\nimport styled from \"styled-components\";\r\nimport { cumsum, json } from \"d3\";\r\nimport { createMapService } from \"../../../domain/map/MapService\";\r\n\r\ninterface Props {\r\n  run: Run;\r\n}\r\nexport const Chart: FunctionComponent<Props> = ({ run }) => {\r\n  const dataOptions: ChartData[] = [\r\n    ChartData.DISTANCE,\r\n    ChartData.SPEED,\r\n    ChartData.ALTITUDE,\r\n  ];\r\n\r\n  const [dataLeft, setDataLeft] = useState(dataOptions[0]);\r\n  const [dataRight, setDataRight] = useState(dataOptions[1]);\r\n  const distanceCumSum = cumsum(\r\n    run.track.distances.map((value) => value.distance)\r\n  );\r\n\r\n  const data: any[] = [];\r\n  for (let i = 0; i < distanceCumSum.length; i++) {\r\n    data.push({\r\n      time: new Date(run.track.trackPoints[i].time - run.startTime)\r\n        .toISOString()\r\n        .slice(12, 19),\r\n      distance: distanceCumSum[i],\r\n      speed: parseInt(run.track.trackPoints[i].speed?.toFixed(1)!),\r\n      altitude: parseInt(run.track.trackPoints[i].altitude?.toFixed(1)!),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ResponsiveContainer width=\"100%\" height=\"30%\" minHeight={\"200px\"}>\r\n        <AreaChart data={data}>\r\n          <defs>\r\n            <Gradient\r\n              id=\"colorDistance\"\r\n              color={Styles.BACKGROUND_COLOR_SECOND}\r\n            />\r\n            <Gradient id=\"colorSpeed\" color={Styles.BACKGROUND_COLOR_THIRD} />\r\n          </defs>\r\n          <XAxis\r\n            dataKey=\"time\"\r\n            stroke=\"#fff\"\r\n            interval={\"preserveStartEnd\"}\r\n            tick={{ fontSize: Styles.FONT_SIZE_NORMAL }}\r\n            dy={10}\r\n            angle={-20}\r\n            style={{ fontSize: Styles.FONT_SIZE_SMALL }}\r\n          />\r\n          <Tooltip\r\n            contentStyle={{\r\n              borderRadius: \"10px\",\r\n              opacity: 0.5,\r\n              maxHeight: \"fit-content\",\r\n            }}\r\n          />\r\n          <CartesianGrid stroke=\"#666\" vertical={false} strokeDasharray=\"3 3\" />\r\n\r\n          <YAxis\r\n            yAxisId=\"left\"\r\n            type=\"number\"\r\n            dataKey={dataLeft.dataKey}\r\n            name={dataLeft.name}\r\n            orientation=\"left\"\r\n            stroke={Styles.BACKGROUND_COLOR_SECOND}\r\n            dx={-5}\r\n            style={{ fontSize: Styles.FONT_SIZE_SMALL }}\r\n          />\r\n\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataLeft.dataKey}\r\n            name={dataLeft.name}\r\n            stroke={Styles.BACKGROUND_COLOR_SECOND}\r\n            fillOpacity={1}\r\n            fill=\"url(#colorDistance)\"\r\n            yAxisId={\"left\"}\r\n          />\r\n\r\n          <YAxis\r\n            yAxisId=\"right\"\r\n            type=\"number\"\r\n            dataKey={dataRight.dataKey}\r\n            name={dataRight.name}\r\n            orientation=\"right\"\r\n            stroke=\"#ff8c00\"\r\n            dx={5}\r\n            style={{ fontSize: Styles.FONT_SIZE_SMALL }}\r\n          />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataRight.dataKey}\r\n            name={dataRight.name}\r\n            stroke=\"#ff8c00\"\r\n            fillOpacity={1}\r\n            fill=\"url(#colorSpeed)\"\r\n            yAxisId={\"right\"}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n      <DataChoosers>\r\n        <DataSelector\r\n          dataOptions={dataOptions}\r\n          setData={setDataLeft}\r\n          title={dataLeft.name}\r\n          backgroundColor={Styles.BACKGROUND_COLOR_SECOND}\r\n        />\r\n        <DataSelector\r\n          dataOptions={dataOptions}\r\n          setData={setDataRight}\r\n          title={dataRight.name}\r\n          backgroundColor={Styles.BACKGROUND_COLOR_THIRD}\r\n        />\r\n      </DataChoosers>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DataChoosers = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 20px;\r\n  padding-top: 20px;\r\n`;\r\n","import React, { FunctionComponent, useMemo, useState } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\n\r\nimport { useParams } from \"react-router\";\r\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\r\nimport { Chart } from \"./chart/Chart\";\r\n\r\nexport const Detail: FunctionComponent = () => {\r\n  const { runId } = useParams<string>();\r\n  const runRepository = createRunRepository();\r\n  const run = useMemo(() => {\r\n    return runRepository.getRun(runId!);\r\n  }, [runId]);\r\n\r\n  if (!run) return <div>No run found</div>;\r\n  return (\r\n    <Container>\r\n      <Heading>{new Date(run.startTime).toLocaleString()}</Heading>\r\n      <Chart run={run} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Heading = styled.h1`\r\n  color: white;\r\n  font-weight: bold;\r\n  font-family: ${Styles.FONT_FAMILY_MAIN};\r\n  font-size: ${Styles.FONT_SIZE_LARGER};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: start;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { RunnerContext } from \"./context/RunnerContext\";\r\nimport { Login } from \"./presentation/login/Login\";\r\nimport { StartRun } from \"./presentation/startRun/StartRun\";\r\nimport { AbsolvedRuns } from \"./presentation/absolvedRuns/AbsolvedRuns\";\r\nimport { Path } from \"./presentation/shared/Path\";\r\nimport {Route, Routes, useHref} from \"react-router-dom\";\r\nimport { Header } from \"./presentation/header/Header\";\r\nimport { Home } from \"./presentation/home/Home\";\r\nimport { useRunsController } from \"./controller/runs/useRunsController\";\r\nimport styled from \"styled-components\";\r\nimport { BottomNavigation } from \"./presentation/navigation/BottomNavigation\";\r\nimport { Styles } from \"./presentation/shared/Styles\";\r\nimport { Detail } from \"./presentation/detail/Detail\";\r\n\r\nfunction App() {\r\n  const { runner } = useContext(RunnerContext);\r\n  const runsController = useRunsController();\r\n  const basename = useHref('/');\r\n\r\n  useEffect(() => {\r\n    runsController.initRuns();\r\n    runsController.initRunner();\r\n  }, []);\r\n\r\n  if (!runner) {\r\n    return (\r\n      <OuterContainer>\r\n        <Login />\r\n      </OuterContainer>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <OuterContainer>\r\n      <Header />\r\n      <PageContainer>\r\n        <Routes>\r\n          <Route path={Path.ROOT} element={<Home />} />\r\n          <Route path={Path.NEW} element={<StartRun />} />\r\n          <Route path={Path.RUNS} element={<AbsolvedRuns />} />\r\n          <Route path={Path.DETAIL} element={<Detail />} />\r\n        </Routes>\r\n      </PageContainer>\r\n      <BottomNavigation />\r\n    </OuterContainer>\r\n  );\r\n}\r\nconst OuterContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT};\r\n`;\r\n\r\nconst PageContainer = styled.div`\r\n  height: calc(\r\n    100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT} - ${Styles.HEADER_HEIGHT}\r\n  );\r\n  width: 100%;\r\n`;\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RunnerContextProvider } from \"./context/RunnerContext\";\r\nimport { CurrentRunContextProvider } from \"./context/CurrentRunContext\";\r\nimport {BrowserRouter, HashRouter, useHref} from \"react-router-dom\";\r\n\r\nif ('serviceWorker' in navigator) {\r\n    const publicUrl = process.env.PUBLIC_URL;\r\n    console.log(publicUrl)\r\n    navigator.serviceWorker\r\n        .register(publicUrl + '/service-worker.js')\r\n        .then((registration) => {\r\n            console.log('Service Worker registered with scope:', registration.scope);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Service Worker registration failed:', error);\r\n        });\r\n}\r\n\r\nconst requestNotificationPermission = async () => {\r\n    const permission = await Notification.requestPermission();\r\n\r\n    if (permission !== 'granted') {\r\n        throw new Error(\"Notification permission not granted\")\r\n    }\r\n\r\n}\r\nrequestNotificationPermission()\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RunnerContextProvider>\r\n      <CurrentRunContextProvider>\r\n        <HashRouter>\r\n          <App />\r\n        </HashRouter>\r\n      </CurrentRunContextProvider>\r\n    </RunnerContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}