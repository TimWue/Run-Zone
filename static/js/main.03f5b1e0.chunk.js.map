{"version":3,"sources":["presentation/shared/LocalStorageKeys.tsx","context/RunnerContext.tsx","domain/runner/RunnerRepository.ts","presentation/shared/Styles.ts","presentation/login/Login.tsx","presentation/shared/Path.tsx","domain/map/MapService.ts","presentation/map/component/RenderRuns.tsx","domain/sensor/SensorRepository.ts","presentation/map/component/RenderPosition.tsx","presentation/map/component/ShowRunControl.tsx","presentation/map/component/Map.tsx","context/CurrentRunContext.tsx","domain/run/RunRepository.ts","presentation/controls/Popup.tsx","presentation/controls/CurrentRunControls.tsx","presentation/dashboard/InfoCard.tsx","presentation/dashboard/Dashboard.tsx","presentation/startRun/StartRun.tsx","presentation/util/SwipeOverlay.tsx","presentation/absolvedRuns/AbsolvedRun.tsx","presentation/absolvedRuns/Pagination.tsx","presentation/absolvedRuns/AbsolvedRuns.tsx","controller/runs/useRunsController.ts","presentation/navigation/Menu.tsx","presentation/header/Header.tsx","presentation/home/Home.tsx","presentation/navigation/BottomNavigation.tsx","presentation/detail/chart/ChartData.ts","presentation/detail/chart/elements/Gradient.tsx","presentation/detail/chart/elements/DataSelector.tsx","presentation/detail/chart/Chart.tsx","presentation/detail/Detail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LocalStorageKeys","RunnerContext","createContext","runner","undefined","runs","setRunner","setRuns","addRun","run","RunnerContextProvider","children","useState","Provider","value","oldState","length","Styles","createRunnerRepository","getRunner","localStorage","getItem","RUNNER","JSON","parse","setItem","stringify","removeRunner","removeItem","Path","Login","props","runnerName","setRunnerName","runnerRepository","useContext","LoginContainer","LoginHeader","LoginName","type","onChange","e","target","placeholder","LoginButton","onClick","console","log","newRunner","runnerRunIds","styled","h3","FONT_FAMILY_MAIN","FONT_SIZE_LARGER","div","input","button","createMapService","calcArea","polygonPoints","points","map","trackPoint","latitude","longitude","poly","polygon","area","track2Polygon","trackPoints","calcDistance","startTrackPoint","endTrackPoint","start","LatLng","end","distanceTo","RenderRuns","mapService","index","Polyline","positions","track","createSensorRepository","observeMeasurement","Observable","observer","navigator","geolocation","watchPosition","geoPosition","position","coords","speed","altitude","next","err","error","enableHighAccuracy","RenderPosition","setPosition","subscription","setSubscription","useMap","sensorRepository","useEffect","subscribe","m","lat","lng","setView","unsubscribe","Marker","ShowRunControl","setShowRuns","className","Map","showRuns","RunMap","center","zoom","scrollWheelZoom","TileLayer","attribution","url","MapContainer","CurrentRunContext","CurrentRunContextProvider","startTime","setStartTime","setTrackPoints","distances","setDistances","setRun","isRunning","setIsRunning","addTrackPoint","createNewTrackPoint","distance","time","Date","now","startRun","stopRun","Promise","resolve","finishedRun","runId","uuid","endTime","pauseRun","resetRun","createRunRepository","storageRuns","RUNS","saveRuns","getAllRuns","deleteRuns","getRun","filter","pop","Popup","show","setShow","PopupContainer","MessageContainer","Button","BACKGROUND_COLOR_SECOND","FONT_SIZE_NORMAL","CurrentRunControls","runRepository","Buttons","StartButton","EndButton","then","ButtonBase","InfoCard","property","Container","Property","Value","Content","Dashboard","runTime","setRunTime","setSpeed","runInterval","setRunInterval","id","setInterval","clearInterval","toFixed","toISOString","substr","StartRun","SwipeOverlay","startPosition","setStartPosition","isActive","setIsActive","onTouchStart","targetTouches","clientX","onTouchMove","moveX","AbsolvedRun","deleteCallback","OuterContainer","icon","faTrash","AbsolvedRunMap","startPoint","centerFromRun","dragging","zoomControl","InfoContainer","ValueIconContainer","faCalendar","ValueContainer","toDateString","faClock","faRoute","reduce","acc","val","DetailButton","to","Link","Pagination","n","setOuterStartIndex","setOuterEndIndex","pageSize","setStartIndex","setEndIndex","Math","ceil","maxPage","currentPage","setCurrentPage","newStartindex","newEndindex","changeCurrentPageByButton","change","validateCurrentPage","newPage","PaginationContainer","ChangeButton","PageInput","currentTarget","MaxPage","AbsolvedRuns","startIndex","endIndex","slice","useRunsController","initRuns","initRunner","deleteAll","Menu","controller","DropDownButton","faBars","DropDownContent","MenuButton","BACKGROUND_COLOR_MAIN","Header","HeaderContainer","Logo","HEADER_HEIGHT","h2","FONT_SIZE_LARGE","Home","Welcome","BottomNavigation","NavButton","CustomLink","ROOT","faHome","NEW","faPlusSquare","faRunning","faUserFriends","faCog","BOTTOM_NAVIGATION_HEIGHT","ChartData","dataKey","name","displayName","DISTANCE","SPEED","ALTITUDE","Gradient","color","x1","y1","x2","y2","offset","stopColor","stopOpacity","DataSelector","dataOptions","setData","title","backgroundColor","showOptions","setShowOption","handleOptionClick","selectedOption","option","Error","findOption","textContent","DataChooser","Title","DataOptions","DataOption","ul","li","Chart","dataLeft","setDataLeft","dataRight","setDataRight","distanceCumSum","cumsum","data","i","push","parseInt","ResponsiveContainer","width","height","minHeight","AreaChart","BACKGROUND_COLOR_THIRD","XAxis","stroke","interval","tick","fontSize","dy","angle","style","FONT_SIZE_SMALL","Tooltip","contentStyle","borderRadius","opacity","maxHeight","CartesianGrid","vertical","strokeDasharray","YAxis","yAxisId","orientation","dx","Area","fillOpacity","fill","DataChoosers","Detail","useParams","useMemo","Heading","toLocaleString","h1","PageContainer","App","runsController","path","element","DETAIL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03f5b1e0.chunk.js","sourcesContent":["export enum LocalStorageKeys {\n  RUNNER = \"runner\",\n  RUNS = \"runs\",\n}\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { Runner } from \"../domain/runner/Runner\";\r\nimport { Run } from \"../domain/run/Run\";\r\n\r\ninterface RunnerProps {\r\n  runner: Runner | undefined;\r\n  setRunner: (runner: Runner | undefined) => void;\r\n  runs: Run[];\r\n  setRuns: (runs: Run[]) => void;\r\n  addRun: (run: Run) => void;\r\n}\r\n\r\nexport const RunnerContext = createContext<RunnerProps>({\r\n  runner: undefined,\r\n  runs: [],\r\n  setRunner(runner: Runner | undefined): void {},\r\n  setRuns(runs: Run[]): void {},\r\n  addRun(run: Run): void {},\r\n});\r\n\r\ninterface ProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const RunnerContextProvider = ({ children }: ProviderProps) => {\r\n  const [runs, setRuns] = useState<Run[]>([]);\r\n  const [runner, setRunner] = useState<Runner | undefined>();\r\n\r\n  const addRun = (run: Run) => {\r\n    setRuns((oldState: Run[]) =>\r\n      oldState.length > 0 ? [...oldState, run] : [run]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <RunnerContext.Provider\r\n      value={{\r\n        runner,\r\n        setRunner,\r\n        runs,\r\n        setRuns,\r\n        addRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </RunnerContext.Provider>\r\n  );\r\n};\r\n","import { Runner } from \"./Runner\";\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\n\nexport interface RunnerRepository {\n  getRunner: () => Runner | undefined;\n  setRunner: (runner: Runner) => void;\n  removeRunner: () => void;\n}\n\nexport const createRunnerRepository = (): RunnerRepository => {\n  const getRunner = () => {\n    const runner = localStorage.getItem(LocalStorageKeys.RUNNER);\n    return runner ? (JSON.parse(runner) as Runner) : undefined;\n  };\n\n  const setRunner = (runner: Runner) => {\n    localStorage.setItem(LocalStorageKeys.RUNNER, JSON.stringify(runner));\n  };\n\n  const removeRunner = () => {\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\n  };\n\n  return {\n    getRunner,\n    setRunner,\n    removeRunner,\n  };\n};\n","export enum Styles {\n  FONT_FAMILY_MAIN = \"Open Sans Condensed, sans-serif\",\n  BACKGROUND_COLOR_MAIN = \"#343a40\",\n  BACKGROUND_COLOR_SECOND = \"#5f9ea0\",\n  BACKGROUND_COLOR_THIRD = \"#ff8c00\",\n  FONT_SIZE_SMALL = \"0.75rem\",\n  FONT_SIZE_NORMAL = \"1rem\",\n  FONT_SIZE_LARGER = \"1.25rem\",\n  FONT_SIZE_LARGE = \"1.5rem\",\n  BOTTOM_NAVIGATION_HEIGHT = \"4rem\",\n  MAP_HEIGHT_SIZE = \"60%\",\n  HEADER_HEIGHT = \"4rem\",\n}\n","import * as React from \"react\";\nimport { useContext, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ntype Props = {};\nexport const Login = (props: Props) => {\n  const [runnerName, setRunnerName] = useState<string>(\"\");\n  const runnerRepository = createRunnerRepository();\n  const { setRunner } = useContext(RunnerContext);\n\n  const clickHandle = () => {\n    console.log(\"Login \" + runnerName);\n    const newRunner = { runnerName: runnerName, runnerRunIds: [] };\n    runnerRepository.setRunner(newRunner);\n    setRunner(newRunner);\n  };\n\n  return (\n    <LoginContainer>\n      <LoginHeader>Willkommen!</LoginHeader>\n      <LoginName\n        type={\"text\"}\n        onChange={(e) => {\n          setRunnerName(e.target.value);\n        }}\n        value={runnerName}\n        placeholder={\"Wie heißt du?\"}\n      />\n      <LoginButton onClick={clickHandle}>Login</LoginButton>\n    </LoginContainer>\n  );\n};\n\nconst LoginHeader = styled.h3`\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  text-transform: uppercase;\n  color: #343a40;\n  font-weight: bold;\n  margin: 0 0 30% 0;\n`;\n\nconst LoginContainer = styled.div`\n  width: 20%;\n  min-width: 300px;\n  height: 80%;\n  min-height: 500px;\n  background-color: aliceblue;\n  border-radius: 10px;\n  box-shadow: 10px 10px #282c34;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10% auto auto auto;\n`;\n\nconst LoginName = styled.input`\n  width: 70%;\n  height: 40px;\n  border: none;\n  border-radius: 10px;\n  margin: 5px;\n  text-align: center;\n`;\n\nconst LoginButton = styled.button`\n  width: 70%;\n  height: 50px;\n  background-color: #343a40;\n  color: white;\n  border-radius: 10px;\n  margin: 5px;\n`;\n","export enum Path {\n  ROOT = \"/\",\n  NEW = \"/new\",\n  RUNS = \"/runs\",\n  DETAIL = \"/runs/:runId\",\n}\n","import { TrackPoint } from \"../run/TrackPoint\";\nimport { LatLng, LatLngTuple } from \"leaflet\";\nimport { area, polygon } from \"@turf/turf\";\nimport { getDistance } from \"geolib\";\n\nexport interface MapService {\n  track2Polygon: (trackPoints: TrackPoint[]) => LatLngTuple[];\n  calcArea: (polygonPoints: TrackPoint[]) => number;\n  calcDistance: (startPoint: TrackPoint, endPoint: TrackPoint) => number;\n}\n\nexport const createMapService = (): MapService => {\n  const track2Polygon = (trackPoints: TrackPoint[]): LatLngTuple[] => {\n    return trackPoints.map((trackPoint) => {\n      return [trackPoint.latitude, trackPoint.longitude];\n    });\n  };\n\n  const calcArea = (polygonPoints: TrackPoint[]): number => {\n    let points: any = polygonPoints.map((trackPoint) => {\n      return [trackPoint.latitude, trackPoint.longitude];\n    });\n    let poly = polygon([points]);\n    return area(poly) / 1000000; // from m^2 to km^2\n  };\n\n  const calcDistance = (\n    startTrackPoint: TrackPoint,\n    endTrackPoint: TrackPoint\n  ) => {\n    const start = new LatLng(\n      startTrackPoint.latitude,\n      startTrackPoint.longitude\n    );\n    const end = new LatLng(endTrackPoint.latitude, endTrackPoint.longitude);\n\n    return start.distanceTo(end);\n  };\n\n  return { calcArea, track2Polygon, calcDistance };\n};\n","import { Polyline } from \"react-leaflet\";\nimport { FunctionComponent } from \"react\";\nimport { Run } from \"../../../domain/run/Run\";\nimport { createMapService } from \"../../../domain/map/MapService\";\n\ninterface Props {\n  runs: Run[];\n}\n\nexport const RenderRuns: FunctionComponent<Props> = ({ runs }: Props) => {\n  const mapService = createMapService();\n\n  return (\n    <>\n      {runs.map((run, index) => {\n        return (\n          <Polyline\n            positions={mapService.track2Polygon(run.track.trackPoints)}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import { LatLng } from \"leaflet\";\r\nimport { Observable } from \"rxjs\";\r\n\r\ninterface SensorRepository {\r\n  observeMeasurement: Observable<SensorMeasurement>;\r\n}\r\n\r\nexport type SensorMeasurement = {\r\n  position: LatLng;\r\n  speed: number | undefined;\r\n  altitude: number | undefined;\r\n};\r\n\r\nexport const createSensorRepository = (): SensorRepository => {\r\n  const observeMeasurement = new Observable<SensorMeasurement>((observer) => {\r\n    navigator.geolocation.watchPosition(\r\n      (geoPosition: GeolocationPosition) => {\r\n        const position = new LatLng(\r\n          geoPosition.coords.latitude,\r\n          geoPosition.coords.longitude\r\n        );\r\n        const speed = geoPosition.coords.speed\r\n          ? geoPosition.coords.speed * 3.6\r\n          : undefined;\r\n        const altitude = geoPosition.coords.altitude\r\n          ? geoPosition.coords.altitude\r\n          : undefined;\r\n        observer.next({ position, speed, altitude });\r\n      },\r\n      (err: any) => console.error(err),\r\n      { enableHighAccuracy: true }\r\n    );\r\n  });\r\n  return { observeMeasurement };\r\n};\r\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { Marker, useMap } from \"react-leaflet\";\r\nimport { RunnerContext } from \"../../../context/RunnerContext\";\r\nimport { createSensorRepository } from \"../../../domain/sensor/SensorRepository\";\r\nimport { LatLng } from \"leaflet\";\r\nimport { Subscription } from \"rxjs\";\r\n\r\ninterface Props {}\r\n\r\nexport const RenderPosition: FunctionComponent<Props> = () => {\r\n  const [position, setPosition] = useState<LatLng>();\r\n  const [subscription, setSubscription] = useState<Subscription>();\r\n  const map = useMap();\r\n  const sensorRepository = createSensorRepository();\r\n\r\n  useEffect(() => {\r\n    setSubscription(\r\n      sensorRepository.observeMeasurement.subscribe((m) => {\r\n        const position = new LatLng(m.position.lat, m.position.lng);\r\n        setPosition(position);\r\n        map.setView(position);\r\n      })\r\n    );\r\n    return () => {\r\n      subscription && subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return <>{position && <Marker position={position} />}</>;\r\n};\r\n","import { FunctionComponent } from \"react\";\n\ninterface Props {\n  setShowRuns: any;\n}\n\nconst ShowRunControl: FunctionComponent<Props> = ({ setShowRuns }: Props) => {\n  return (\n    <div className=\"leaflet-top leaflet-right\">\n      <div className=\"leaflet-control\">\n        <button onClick={() => setShowRuns((oldState: any) => !oldState)}>\n          Show Runs\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowRunControl;\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport { RunnerContext } from \"../../../context/RunnerContext\";\nimport { RenderRuns } from \"./RenderRuns\";\nimport { RenderPosition } from \"./RenderPosition\";\nimport ShowRunControl from \"./ShowRunControl\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../../shared/Styles\";\n\ninterface Props {}\n\nexport const Map: FunctionComponent<Props> = ({}: Props) => {\n  const { runs } = useContext(RunnerContext);\n  const [showRuns, setShowRuns] = useState(false);\n\n  return (\n    <RunMap\n      className=\"basicMap\"\n      center={[0, 0]}\n      zoom={20}\n      scrollWheelZoom={false}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n      />\n      {showRuns && <RenderRuns runs={runs} />}\n      <RenderPosition />\n      <ShowRunControl setShowRuns={setShowRuns} />\n    </RunMap>\n  );\n};\n\nconst RunMap = styled(MapContainer)`\n  width: 100%;\n  height: 75%;\n`;\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { Run } from \"../domain/run/Run\";\nimport { TrackPoint } from \"../domain/run/TrackPoint\";\nimport { uuid } from \"uuidv4\";\nimport { Distance } from \"../domain/run/Distance\";\nimport { createMapService } from \"../domain/map/MapService\";\nimport {\n  createSensorRepository,\n  SensorMeasurement,\n} from \"../domain/sensor/SensorRepository\";\nimport { Subscription } from \"rxjs\";\n\ninterface CurrentRunProps {\n  startTime: number | undefined;\n  run: Run | undefined;\n  startRun: () => void;\n  stopRun: () => Promise<Run | undefined>;\n  pauseRun: () => void;\n  addTrackPoint: (trackPoint: TrackPoint) => void;\n  resetRun: () => void;\n  isRunning: boolean;\n  setIsRunning: (isRunning: boolean) => void;\n}\nexport const CurrentRunContext = createContext<CurrentRunProps>(\n  {} as CurrentRunProps\n);\n\ninterface ProviderProps {\n  children: ReactNode;\n}\n\nexport const CurrentRunContextProvider = ({ children }: ProviderProps) => {\n  const [subscription, setSubscription] = useState<Subscription>();\n  const [startTime, setStartTime] = useState<number>();\n  const [trackPoints, setTrackPoints] = useState<TrackPoint[]>([]);\n  const [distances, setDistances] = useState<Distance[]>([]);\n  const [run, setRun] = useState<Run>();\n  const [isRunning, setIsRunning] = useState(false);\n  const mapService = createMapService();\n  const sensorRepository = createSensorRepository();\n\n  useEffect(() => {\n    if (isRunning) {\n      setSubscription(\n        sensorRepository.observeMeasurement.subscribe((m) =>\n          addTrackPoint(createNewTrackPoint(m))\n        )\n      );\n    } else {\n      subscription && subscription.unsubscribe();\n    }\n  }, [isRunning]);\n\n  useEffect(() => {\n    if (trackPoints.length > 0) {\n      //otherwise we would have more distances than trackpoints\n      const distance =\n        trackPoints.length > 1\n          ? mapService.calcDistance(\n              trackPoints[trackPoints.length - 2],\n              trackPoints[trackPoints.length - 1]\n            ) / 1000 // m --> km\n          : 0;\n      setDistances((oldState) => [...oldState, { distance: distance }]);\n    }\n  }, [trackPoints]);\n\n  const createNewTrackPoint = (m: SensorMeasurement): TrackPoint => {\n    return {\n      latitude: m.position.lat,\n      longitude: m.position.lng,\n      altitude: m.altitude,\n      speed: m.speed,\n      time: Date.now(),\n    };\n  };\n\n  const resetRun = () => {\n    setRun(undefined);\n    setStartTime(undefined);\n    setTrackPoints([]);\n  };\n\n  const addTrackPoint = (trackPoint: TrackPoint) => {\n    console.log(\"Add TrackPoint: \", trackPoint);\n    setTrackPoints((oldState) => [...oldState, trackPoint]);\n  };\n\n  const startRun = () => {\n    console.log(\"Start Run\");\n    !startTime && setStartTime(Date.now());\n    setIsRunning(true);\n  };\n\n  const pauseRun = () => {\n    console.log(\"Pause Run\");\n    setIsRunning(false);\n  };\n\n  const stopRun = (): Promise<Run | undefined> => {\n    console.log(\"Stop Run\");\n    if (trackPoints.length === 0) return Promise.resolve(undefined);\n    const track = { trackPoints, distances };\n    const finishedRun = {\n      runId: uuid(),\n      track: track,\n      startTime: startTime ? startTime : Date.now(),\n      endTime: Date.now(),\n    };\n    setRun(finishedRun);\n    setIsRunning(false);\n    setTrackPoints([]);\n    setStartTime(undefined);\n    setDistances([]);\n    return Promise.resolve(finishedRun);\n  };\n\n  return (\n    <CurrentRunContext.Provider\n      value={{\n        startTime,\n        isRunning,\n        setIsRunning,\n        run,\n        startRun,\n        stopRun,\n        pauseRun,\n        addTrackPoint,\n        resetRun,\n      }}\n    >\n      {children}\n    </CurrentRunContext.Provider>\n  );\n};\n","import { Run } from \"./Run\";\nimport { LocalStorageKeys } from \"../../presentation/shared/LocalStorageKeys\";\n\nexport interface RunRepository {\n  getAllRuns: () => Run[];\n  saveRuns: (runs: Run[]) => void;\n  deleteRuns: () => void;\n  getRun: (runId: string) => Run | undefined;\n}\n\nexport const createRunRepository = (): RunRepository => {\n  const storageRuns = localStorage.getItem(LocalStorageKeys.RUNS);\n  const runs: Run[] = storageRuns ? JSON.parse(storageRuns) : [];\n\n  const getAllRuns = (): Run[] => {\n    return runs;\n  };\n\n  const saveRuns = (runs: Run[]): void => {\n    localStorage.setItem(LocalStorageKeys.RUNS, JSON.stringify(runs));\n  };\n\n  const deleteRuns = (): void => {\n    localStorage.removeItem(LocalStorageKeys.RUNS);\n    localStorage.removeItem(LocalStorageKeys.RUNNER);\n  };\n\n  const getRun = (runId: string): Run | undefined => {\n    return runs.filter((run) => run.runId === runId).pop();\n  };\n\n  return { saveRuns, getAllRuns, deleteRuns, getRun };\n};\n","import { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ninterface Props {\n  show: boolean;\n  setShow: (show: boolean) => void;\n}\n\nexport const Popup: FunctionComponent<Props> = ({ show, setShow }) => {\n  return (\n    <PopupContainer show={show}>\n      <MessageContainer>Strecke gespeichert!</MessageContainer>\n      <Button onClick={() => setShow(false)}>Nice</Button>\n    </PopupContainer>\n  );\n};\nconst MessageContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  color: white;\n  width: 100%;\n  text-align: center;\n  padding: 2px 0 10px 0;\n`;\n\nconst Button = styled.div`\n  border-radius: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  width: 30vw;\n  color: black;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n`;\n\ninterface ContainerProps {\n  show: boolean;\n}\n\nconst PopupContainer = styled.div<ContainerProps>`\n  width: 70vw;\n  border-radius: 5px;\n  border: 1px solid black;\n  position: absolute;\n  background-color: #343a40;\n  color: white;\n  top: 50%;\n  left: calc(50% - 70vw * 0.5);\n  visibility: ${({ show }: ContainerProps) => (show ? \"visible\" : \"hidden\")};\n  z-index: 500;\n  padding: 8px 10px;\n  font-weight: bolder;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n`;\n","import { FunctionComponent, useContext, useEffect, useState } from \"react\";\r\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { Popup } from \"./Popup\";\r\n\r\ninterface Props {}\r\n\r\nexport const CurrentRunControls: FunctionComponent<Props> = () => {\r\n  const [show, setShow] = useState(false);\r\n  const { addTrackPoint, startRun, stopRun, pauseRun, isRunning } =\r\n    useContext(CurrentRunContext);\r\n  const { addRun, runs } = useContext(RunnerContext);\r\n  const runRepository = createRunRepository();\r\n\r\n  const handleStart = () => {\r\n    isRunning ? pauseRun() : startRun();\r\n  };\r\n\r\n  const handleSave = () => {\r\n    stopRun().then((finishedRun) => {\r\n      console.log(\"Save run\");\r\n      if (finishedRun) {\r\n        if (runs.length > 0) {\r\n          runRepository.saveRuns([...runs, finishedRun]);\r\n        } else {\r\n          runRepository.saveRuns([finishedRun]);\r\n        }\r\n        addRun(finishedRun);\r\n        setShow(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Buttons>\r\n        <StartButton onClick={handleStart}>\r\n          {isRunning ? \"Pause\" : \"Start\"}\r\n        </StartButton>\r\n        <EndButton onClick={handleSave}>End</EndButton>\r\n      </Buttons>\r\n      <Popup show={show} setShow={setShow} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Buttons = styled.div`\r\n  width: 100%;\r\n  height: 10%;\r\n  color: black;\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ButtonBase = styled.button`\r\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\r\n  font-size: ${Styles.FONT_SIZE_NORMAL};\r\n  color: inherit;\r\n  border: none;\r\n  padding: 10px 0;\r\n  font-weight: bolder;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StartButton = styled(ButtonBase)`\r\n  width: 65%;\r\n`;\r\n\r\nconst EndButton = styled(ButtonBase)`\r\n  width: 35%;\r\n`;\r\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ntype Props = {\n  property: string;\n  value: string | number;\n};\n\nexport const InfoCard = ({ property, value }: Props) => {\n  return (\n    <Container>\n      <Property>{property}</Property>\n      <Value>{value}</Value>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 50%;\n  min-width: 120px;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  padding: 10px;\n`;\n\nconst Content = styled.div`\n  font-family: Open Sans Condensed, sans-serif;\n  font-weight: bolder;\n  color: black;\n`;\n\nconst Property = styled(Content)`\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\nconst Value = styled(Content)`\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n","import * as React from \"react\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { CurrentRunContext } from \"../../context/CurrentRunContext\";\nimport { InfoCard } from \"./InfoCard\";\nimport styled from \"styled-components\";\nimport { createSensorRepository } from \"../../domain/sensor/SensorRepository\";\nimport { Subscription } from \"rxjs\";\n\nexport const Dashboard = () => {\n  const { startTime, isRunning } = useContext(CurrentRunContext);\n  const [runTime, setRunTime] = useState(0);\n  const [speed, setSpeed] = useState(0);\n  const [runInterval, setRunInterval] = useState<any>();\n  const [subscription, setSubscription] = useState<Subscription>();\n  const sensorRepository = createSensorRepository();\n\n  const updateRunTime = () => {\n    startTime && setRunTime(Date.now() - startTime);\n  };\n  if (isRunning) {\n  } else {\n  }\n  useEffect(() => {\n    if (isRunning) {\n      // Subscribe to velocity\n      setSubscription(\n        sensorRepository.observeMeasurement.subscribe(\n          (m) => m.speed && setSpeed(m.speed)\n        )\n      );\n      const id = setInterval(() => {\n        updateRunTime();\n      }, 1000);\n      setRunInterval(id);\n    } else {\n      subscription && subscription.unsubscribe();\n      runInterval && clearInterval(runInterval);\n      setRunTime(0);\n    }\n  }, [isRunning]);\n\n  return (\n    <Container>\n      <InfoCard property={\"Speed\"} value={speed.toFixed(1) + \" km/h\"} />\n      <InfoCard\n        property={\"Time\"}\n        value={new Date(runTime).toISOString().substr(11, 8)}\n      />\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 15%;\n  flex-wrap: wrap;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { Map } from \"../map/component/Map\";\nimport { CurrentRunControls } from \"../controls/CurrentRunControls\";\nimport { Dashboard } from \"../dashboard/Dashboard\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\ninterface Props {}\n\nexport const StartRun: FunctionComponent<Props> = () => {\n  return (\n    <>\n      <Dashboard />\n      <Map />\n      <CurrentRunControls />\n    </>\n  );\n};\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const SwipeOverlay: FunctionComponent = ({ children }) => {\n  const [startPosition, setStartPosition] = useState<number>();\n  const [isActive, setIsActive] = useState(false);\n\n  const touchMoveHandle = (e: React.TouchEvent<HTMLDivElement>) => {\n    const moveX = e.targetTouches[0].clientX;\n    if (startPosition! - moveX > 50) {\n      setIsActive(true);\n    }\n    if (startPosition! - moveX < -50) {\n      setIsActive(false);\n    }\n  };\n\n  const touchStartHandle = (e: React.TouchEvent<HTMLDivElement>) => {\n    setStartPosition(e.targetTouches[0].clientX);\n  };\n\n  return (\n    <Container\n      onTouchStart={touchStartHandle}\n      onTouchMove={touchMoveHandle}\n      isActive={isActive}\n    >\n      {isActive && children}\n    </Container>\n  );\n};\n\ninterface OverlayProps {\n  isActive: boolean;\n}\n\nconst Container = styled.div<OverlayProps>`\n  /*\n  display: ${({ isActive }: OverlayProps) => (isActive ? \"block\" : \"none\")};\n*/\n  display: flex;\n  color: white;\n  width: inherit;\n  height: 100%;\n  z-index: ${({ isActive }: OverlayProps) => (isActive ? 50 : 30)};\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  background-color: ${({ isActive }: OverlayProps) =>\n    isActive ? \"rgba(52, 58, 64, 0.9)\" : \"rgba(52, 58, 64, 0)\"};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { FunctionComponent } from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { SwipeOverlay } from \"../util/SwipeOverlay\";\nimport { Link } from \"react-router-dom\";\nimport { Path } from \"../shared/Path\";\ninterface Props {\n  run: Run;\n  deleteCallback: (runId: string) => void;\n}\n\nexport const AbsolvedRun: FunctionComponent<Props> = ({\n  run,\n  deleteCallback,\n}) => {\n  const centerFromRun = (run: Run): LatLng => {\n    const startPoint = run.track.trackPoints[0];\n    return new LatLng(startPoint.latitude, startPoint.longitude);\n  };\n\n  const mapService = createMapService();\n\n  return (\n    <OuterContainer>\n      <SwipeOverlay>\n        <FontAwesomeIcon\n          onClick={() => deleteCallback(run.runId)}\n          icon={faTrash}\n        />\n      </SwipeOverlay>\n\n      <AbsolvedRunMap\n        className=\"basicMap\"\n        center={centerFromRun(run)}\n        zoom={20}\n        dragging={false}\n        zoomControl={false}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n        />\n        <Polyline positions={mapService.track2Polygon(run.track.trackPoints)} />\n      </AbsolvedRunMap>\n      <InfoContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faCalendar} />\n          <ValueContainer>\n            {new Date(run.startTime).toDateString()}\n          </ValueContainer>\n        </ValueIconContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faClock} />\n          <ValueContainer>\n            {new Date(run.endTime - run.startTime).toISOString().substr(11, 8)}\n          </ValueContainer>\n        </ValueIconContainer>\n        <ValueIconContainer>\n          <FontAwesomeIcon icon={faRoute} />\n          <ValueContainer>\n            {run.track.distances\n              .map((value) => value.distance)\n              .reduce((acc, val) => acc + val)\n              .toFixed(1) + \" km\"}\n          </ValueContainer>\n        </ValueIconContainer>\n        <DetailButton to={Path.RUNS + \"/\" + run.runId}>Details</DetailButton>\n      </InfoContainer>\n    </OuterContainer>\n  );\n};\n\nconst DetailButton = styled(Link)`\n  text-align: center;\n  max-width: 150px;\n  background-color: ${Styles.BACKGROUND_COLOR_SECOND};\n  color: #282c34;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 5px 5px 10px #282c34;\n  &:active {\n    box-shadow: 0 0;\n  }\n  z-index: 40;\n`;\n\nconst ValueIconContainer = styled.div`\n  color: white;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  display: inline-flex;\n  margin: 5px;\n`;\n\nconst ValueContainer = styled.div`\n  margin-left: 10px;\n`;\n\nconst OuterContainer = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  box-shadow: 5px 5px 5px #282c34;\n  border-radius: 5px;\n  margin-bottom: 15px;\n  cursor: pointer;\n`;\n\nconst InfoContainer = styled.div`\n  width: 50%;\n  padding-left: 5px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AbsolvedRunMap = styled(MapContainer)`\n  width: 130px;\n  height: 130px;\n  border-radius: 8px;\n  border: none;\n  margin: 5px;\n  z-index: 0;\n`;\n","import React, {\n  Dispatch,\n  FunctionComponent,\n  SetStateAction,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MapContainer, Polyline, TileLayer } from \"react-leaflet\";\nimport { Run } from \"../../domain/run/Run\";\nimport { createMapService } from \"../../domain/map/MapService\";\nimport { LatLng } from \"leaflet\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  n: number;\n  setOuterStartIndex: (endIndex: number | undefined) => void;\n  setOuterEndIndex: (endIndex: number | undefined) => void;\n}\n\nexport const Pagination: FunctionComponent<Props> = ({\n  n,\n  setOuterStartIndex,\n  setOuterEndIndex,\n}) => {\n  const [pageSize, setPageSize] = useState(3);\n  const [startIndex, setStartIndex] = useState(0);\n  const [endIndex, setEndIndex] = useState(pageSize);\n  const [maxPage, setMaxPage] = useState(Math.ceil(n / pageSize));\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    let newStartindex = (currentPage - 1) * pageSize;\n    let newEndindex =\n      newStartindex + pageSize > n ? n : newStartindex + pageSize;\n\n    setStartIndex(newStartindex);\n    setOuterStartIndex(newStartindex);\n    setEndIndex(newEndindex);\n    setOuterEndIndex(newEndindex);\n  }, [pageSize, currentPage]);\n\n  const changeCurrentPageByButton = (change: number) => {\n    setCurrentPage(validateCurrentPage(currentPage + change));\n  };\n\n  const changeCurrentPageByInput = (e: React.FormEvent<HTMLInputElement>) => {\n    setCurrentPage(validateCurrentPage(+e.currentTarget.value));\n  };\n\n  const validateCurrentPage = (newPage: number): number => {\n    if (newPage > maxPage) {\n      newPage = maxPage;\n    }\n    if (newPage < 1) {\n      newPage = 1;\n    }\n    return newPage;\n  };\n\n  return (\n    <PaginationContainer>\n      <ChangeButton onClick={() => changeCurrentPageByButton(-1)}>\n        {\"<\"}\n      </ChangeButton>\n      <PageInput onChange={changeCurrentPageByInput} value={currentPage} />\n      <MaxPage> / {maxPage}</MaxPage>\n      <ChangeButton onClick={() => changeCurrentPageByButton(1)}>\n        {\">\"}\n      </ChangeButton>\n    </PaginationContainer>\n  );\n};\n\nconst ChangeButton = styled.button`\n  background-color: #343a40;\n  color: white;\n  border: 1px white;\n`;\nconst MaxPage = styled.div`\n  font-size: inherit;\n  width: 30px;\n  padding: 2px 5px;\n`;\n\nconst PageInput = styled.input`\n  width: 25px;\n  text-align: center;\n  font-size: inherit;\n`;\nconst PaginationContainer = styled.div`\n  color: white;\n  display: flex;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  float: right;\n  margin-bottom: 10px;\n`;\n","import React, { FunctionComponent, useContext, useState } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\nimport { AbsolvedRun } from \"./AbsolvedRun\";\nimport { Pagination } from \"./Pagination\";\n\ninterface Props {}\n\nexport const AbsolvedRuns: FunctionComponent<Props> = () => {\n  const { runs, setRuns } = useContext(RunnerContext);\n  const [startIndex, setStartIndex] = useState<number>();\n  const [endIndex, setEndIndex] = useState<number>();\n\n  const deleteCallback = (runId: string) => {\n    setRuns(runs.filter((run) => run.runId != runId));\n  };\n\n  return (\n    <>\n      <Pagination\n        n={runs.length}\n        setOuterStartIndex={setStartIndex}\n        setOuterEndIndex={setEndIndex}\n      />\n\n      {runs.slice(startIndex, endIndex).map((run) => (\n        <AbsolvedRun\n          key={run.runId}\n          run={run}\n          deleteCallback={deleteCallback}\n        />\n      ))}\n    </>\n  );\n};\n","import { createRunRepository } from \"../../domain/run/RunRepository\";\nimport { createRunnerRepository } from \"../../domain/runner/RunnerRepository\";\nimport { useContext, useEffect } from \"react\";\nimport { RunnerContext } from \"../../context/RunnerContext\";\n\nexport interface RunsController {\n  initRuns: () => void;\n  initRunner: () => void;\n  removeRunner: () => void;\n  deleteAll: () => void;\n}\n\nexport const useRunsController = (): RunsController => {\n  const { setRunner, setRuns, runs } = useContext(RunnerContext);\n  const runRepository = createRunRepository();\n  const runnerRepository = createRunnerRepository();\n\n  useEffect(() => {\n    saveRuns();\n  }, [runs]);\n\n  const initRuns = () => {\n    setRuns(runRepository.getAllRuns());\n  };\n\n  const initRunner = () => {\n    setRunner(runnerRepository.getRunner());\n  };\n\n  const removeRunner = () => {\n    setRunner(undefined);\n    runnerRepository.removeRunner();\n  };\n\n  const saveRuns = () => {\n    runRepository.saveRuns(runs);\n  };\n\n  const deleteAll = () => {\n    runRepository.deleteRuns();\n  };\n\n  return { initRuns, initRunner, removeRunner, deleteAll };\n};\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Path } from \"../shared/Path\";\nimport { NavLink } from \"./NavLink\";\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Menu: FunctionComponent = () => {\n  const [show, setShow] = useState(false);\n  const controller = useRunsController();\n  return (\n    <DropDownButton onClick={() => setShow(!show)}>\n      <FontAwesomeIcon icon={faBars} />\n      <DropDownContent show={show}>\n        <MenuButton onClick={() => controller.deleteAll()}>Forget</MenuButton>\n        <MenuButton onClick={() => controller.removeRunner()}>\n          Logout\n        </MenuButton>\n      </DropDownContent>\n    </DropDownButton>\n  );\n};\n\nconst DropDownButton = styled.div`\n  padding-top: 5px;\n  position: relative;\n  display: inline-block;\n  color: white;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\ninterface Props {\n  show: boolean;\n}\nconst DropDownContent = styled.div<Props>`\n  color: white;\n  background-color: ${Styles.BACKGROUND_COLOR_MAIN};\n  display: ${(props) => (props.show ? \"block\" : \"none\")};\n  position: absolute;\n  z-index: 500;\n  right: -200%;\n  box-shadow: 0px 0px 10px #282c34;\n  width: 100px;\n`;\nconst MenuButton = styled.div`\n  text-align: center;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: inherit;\n    color: white;\n  }\n`;\n","import * as React from \"react\";\nimport { Menu } from \"../navigation/Menu\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nexport const Header = () => {\n  return (\n    <HeaderContainer>\n      <Logo>Places</Logo>\n      <Menu />\n    </HeaderContainer>\n  );\n};\n\nconst HeaderContainer = styled.div`\n  width: 100%;\n  height: ${Styles.HEADER_HEIGHT};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  padding: 10px 40px 5px 10px;\n`;\n\nconst Logo = styled.h2`\n  color: #eee;\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGE};\n  font-weight: bold;\n  line-height: 48px;\n  padding: 0 5px;\n  text-transform: uppercase;\n  min-width: 200px;\n`;\n","import * as React from \"react\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { RunnerContext } from \"../../context/RunnerContext\";\r\nimport styled from \"styled-components\";\r\nimport { Styles } from \"../shared/Styles\";\r\nimport { createSensorRepository } from \"../../domain/sensor/SensorRepository\";\r\n\r\nexport const Home = () => {\r\n  const { runner } = useContext(RunnerContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Welcome>\r\n        Willkommen\r\n        <br />\r\n        {runner!.runnerName}\r\n      </Welcome>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Welcome = styled.h3`\r\n  font-family: ${Styles.FONT_FAMILY_MAIN};\r\n  text-align: center;\r\n  font-size: ${Styles.FONT_SIZE_LARGE};\r\n  color: white;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10% 0 0 0;\r\n`;\r\n","import React, { FunctionComponent, useState } from \"react\";\nimport { Path } from \"../shared/Path\";\nimport { NavLink } from \"./NavLink\";\nimport { useRunsController } from \"../../controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faBiking,\n  faCog,\n  faHome,\n  faPlusSquare,\n  faRoute,\n  faRunning,\n  faUserFriends,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const BottomNavigation: FunctionComponent = () => {\n  return (\n    <Container>\n      <NavButton>\n        <CustomLink to={Path.ROOT}>\n          <FontAwesomeIcon icon={faHome} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <CustomLink to={Path.NEW}>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <CustomLink to={Path.RUNS}>\n          <FontAwesomeIcon icon={faRunning} />\n        </CustomLink>\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faUserFriends} />\n      </NavButton>\n      <NavButton>\n        <FontAwesomeIcon icon={faCog} />\n      </NavButton>\n    </Container>\n  );\n};\n\nconst CustomLink = styled(Link)`\n  color: inherit;\n  font-size: inherit;\n  &:hover {\n    color: white;\n    background-color: inherit;\n  }\n  &:focus {\n    color: white;\n  }\n`;\n\nconst Container = styled.div`\n  background-color: #282c34;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-wrap: nowrap;\n  z-index: 1000;\n`;\n\nconst NavButton = styled.button`\n  height: ${Styles.BOTTOM_NAVIGATION_HEIGHT};\n  width: 20%;\n  display: block;\n  color: #888;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  font-size: ${Styles.FONT_SIZE_LARGER};\n  border: none;\n  background-color: inherit;\n`;\n","export class ChartData {\n  static readonly DISTANCE = new ChartData(\n    \"distance\",\n    \"distance [km]\",\n    \"Distance\"\n  );\n  static readonly SPEED = new ChartData(\"speed\", \"speed [km/h]\", \"Speed\");\n  static readonly ALTITUDE = new ChartData(\n    \"altitude\",\n    \"altitude [m]\",\n    \"Altitude\"\n  );\n  private constructor(\n    public readonly dataKey: string,\n    public readonly name: string,\n    public readonly displayName: string\n  ) {}\n}\n","import React, { FunctionComponent } from \"react\";\n\ninterface Props {\n  id: string;\n  color: string;\n}\nexport const Gradient: FunctionComponent<Props> = ({ color, id }) => {\n  return (\n    <linearGradient id={id} x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n      <stop offset=\"5%\" stopColor={color} stopOpacity={0.8} />\n      <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n    </linearGradient>\n  );\n};\n","import React, { FunctionComponent, useMemo, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Styles } from \"../../../shared/Styles\";\nimport { ChartData } from \"../ChartData\";\n\ninterface Props {\n  dataOptions: ChartData[];\n  setData: (chartData: ChartData) => void;\n  title: string;\n  backgroundColor: string;\n}\n\nexport const DataSelector: FunctionComponent<Props> = ({\n  dataOptions,\n  setData,\n  title,\n  backgroundColor,\n}) => {\n  const [showOptions, setShowOption] = useState(false);\n\n  const findOption = (value: string): ChartData => {\n    const selectedOption = dataOptions.filter(\n      (option) => option.displayName === value\n    )[0];\n    if (!selectedOption) throw new Error(\"No suitable Option found\");\n    return selectedOption;\n  };\n\n  const handleOptionClick = (e: any) => {\n    const selectedOption = findOption(e.target.textContent);\n    setData(selectedOption);\n    setShowOption(!showOptions);\n  };\n\n  return (\n    <DataChooser onClick={() => setShowOption(!showOptions)}>\n      <Title backgroundColor={backgroundColor}>{title}</Title>\n      {showOptions && (\n        <DataOptions>\n          {dataOptions.map((option, index) => (\n            <DataOption key={index} onClick={handleOptionClick}>\n              {option.displayName}\n            </DataOption>\n          ))}\n        </DataOptions>\n      )}\n    </DataChooser>\n  );\n};\ninterface TitleProps {\n  backgroundColor: string;\n}\nconst DataChooser = styled.div``;\n\nconst Title = styled.div<TitleProps>`\n  color: black;\n  font-size: ${Styles.FONT_SIZE_NORMAL};\n  background-color: ${(props) => props.backgroundColor};\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\nconst DataOptions = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\nconst DataOption = styled.li`\n  cursor: pointer;\n  background-color: black;\n  color: white;\n  padding: 5px;\n  border-radius: 5px;\n`;\n","import React, { FunctionComponent, useState } from \"react\";\n\nimport { Styles } from \"../../shared/Styles\";\nimport {\n  Area,\n  AreaChart,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { ChartData } from \"./ChartData\";\nimport { Run } from \"../../../domain/run/Run\";\nimport { Gradient } from \"./elements/Gradient\";\nimport { DataSelector } from \"./elements/DataSelector\";\nimport styled from \"styled-components\";\nimport { cumsum, json } from \"d3\";\nimport { createMapService } from \"../../../domain/map/MapService\";\n\ninterface Props {\n  run: Run;\n}\nexport const Chart: FunctionComponent<Props> = ({ run }) => {\n  const dataOptions: ChartData[] = [\n    ChartData.DISTANCE,\n    ChartData.SPEED,\n    ChartData.ALTITUDE,\n  ];\n\n  const [dataLeft, setDataLeft] = useState(dataOptions[0]);\n  const [dataRight, setDataRight] = useState(dataOptions[1]);\n  const distanceCumSum = cumsum(\n    run.track.distances.map((value) => value.distance)\n  );\n\n  const data: any[] = [];\n  for (let i = 0; i < distanceCumSum.length; i++) {\n    data.push({\n      time: new Date(run.track.trackPoints[i].time - run.startTime)\n        .toISOString()\n        .slice(12, 19),\n      distance: distanceCumSum[i],\n      speed: parseInt(run.track.trackPoints[i].speed?.toFixed(1)!),\n      altitude: parseInt(run.track.trackPoints[i].altitude?.toFixed(1)!),\n    });\n  }\n\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height=\"30%\" minHeight={\"200px\"}>\n        <AreaChart data={data}>\n          <defs>\n            <Gradient\n              id=\"colorDistance\"\n              color={Styles.BACKGROUND_COLOR_SECOND}\n            />\n            <Gradient id=\"colorSpeed\" color={Styles.BACKGROUND_COLOR_THIRD} />\n          </defs>\n          <XAxis\n            dataKey=\"time\"\n            stroke=\"#fff\"\n            interval={\"preserveStartEnd\"}\n            tick={{ fontSize: Styles.FONT_SIZE_NORMAL }}\n            dy={10}\n            angle={-20}\n            style={{ fontSize: Styles.FONT_SIZE_SMALL }}\n          />\n          <Tooltip\n            contentStyle={{\n              borderRadius: \"10px\",\n              opacity: 0.5,\n              maxHeight: \"fit-content\",\n            }}\n          />\n          <CartesianGrid stroke=\"#666\" vertical={false} strokeDasharray=\"3 3\" />\n\n          <YAxis\n            yAxisId=\"left\"\n            type=\"number\"\n            dataKey={dataLeft.dataKey}\n            name={dataLeft.name}\n            orientation=\"left\"\n            stroke={Styles.BACKGROUND_COLOR_SECOND}\n            dx={-5}\n            style={{ fontSize: Styles.FONT_SIZE_SMALL }}\n          />\n\n          <Area\n            type=\"monotone\"\n            dataKey={dataLeft.dataKey}\n            name={dataLeft.name}\n            stroke={Styles.BACKGROUND_COLOR_SECOND}\n            fillOpacity={1}\n            fill=\"url(#colorDistance)\"\n            yAxisId={\"left\"}\n          />\n\n          <YAxis\n            yAxisId=\"right\"\n            type=\"number\"\n            dataKey={dataRight.dataKey}\n            name={dataRight.name}\n            orientation=\"right\"\n            stroke=\"#ff8c00\"\n            dx={5}\n            style={{ fontSize: Styles.FONT_SIZE_SMALL }}\n          />\n          <Area\n            type=\"monotone\"\n            dataKey={dataRight.dataKey}\n            name={dataRight.name}\n            stroke=\"#ff8c00\"\n            fillOpacity={1}\n            fill=\"url(#colorSpeed)\"\n            yAxisId={\"right\"}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n      <DataChoosers>\n        <DataSelector\n          dataOptions={dataOptions}\n          setData={setDataLeft}\n          title={dataLeft.name}\n          backgroundColor={Styles.BACKGROUND_COLOR_SECOND}\n        />\n        <DataSelector\n          dataOptions={dataOptions}\n          setData={setDataRight}\n          title={dataRight.name}\n          backgroundColor={Styles.BACKGROUND_COLOR_THIRD}\n        />\n      </DataChoosers>\n    </>\n  );\n};\n\nconst DataChoosers = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n  padding-top: 20px;\n`;\n","import React, { FunctionComponent, useMemo, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { Styles } from \"../shared/Styles\";\n\nimport { useParams } from \"react-router\";\nimport { createRunRepository } from \"../../domain/run/RunRepository\";\nimport { Chart } from \"./chart/Chart\";\n\nexport const Detail: FunctionComponent = () => {\n  const { runId } = useParams<string>();\n  const runRepository = createRunRepository();\n  const run = useMemo(() => {\n    return runRepository.getRun(runId!);\n  }, [runId]);\n\n  if (!run) return <div>No run found</div>;\n  return (\n    <Container>\n      <Heading>{new Date(run.startTime).toLocaleString()}</Heading>\n      <Chart run={run} />\n    </Container>\n  );\n};\n\nconst Heading = styled.h1`\n  color: white;\n  font-weight: bold;\n  font-family: ${Styles.FONT_FAMILY_MAIN};\n  font-size: ${Styles.FONT_SIZE_LARGER};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  height: 100%;\n  width: 100%;\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport { RunnerContext } from \"./context/RunnerContext\";\nimport { Login } from \"./presentation/login/Login\";\nimport { StartRun } from \"./presentation/startRun/StartRun\";\nimport { AbsolvedRuns } from \"./presentation/absolvedRuns/AbsolvedRuns\";\nimport { Path } from \"./presentation/shared/Path\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Header } from \"./presentation/header/Header\";\nimport { Home } from \"./presentation/home/Home\";\nimport { useRunsController } from \"./controller/runs/useRunsController\";\nimport styled from \"styled-components\";\nimport { BottomNavigation } from \"./presentation/navigation/BottomNavigation\";\nimport { Styles } from \"./presentation/shared/Styles\";\nimport { Detail } from \"./presentation/detail/Detail\";\n\nfunction App() {\n  const { runner } = useContext(RunnerContext);\n  const runsController = useRunsController();\n\n  useEffect(() => {\n    runsController.initRuns();\n    runsController.initRunner();\n  }, []);\n\n  if (!runner) {\n    return (\n      <OuterContainer>\n        <Login />\n      </OuterContainer>\n    );\n  }\n  return (\n    <OuterContainer>\n      <Header />\n      <PageContainer>\n        <Routes>\n          <Route path={Path.ROOT} element={<Home />} />\n          <Route path={Path.NEW} element={<StartRun />} />\n          <Route path={Path.RUNS} element={<AbsolvedRuns />} />\n          <Route path={Path.DETAIL} element={<Detail />} />\n        </Routes>\n      </PageContainer>\n      <BottomNavigation />\n    </OuterContainer>\n  );\n}\nconst OuterContainer = styled.div`\n  width: 100vw;\n  height: 100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT};\n`;\n\nconst PageContainer = styled.div`\n  height: calc(\n    100vh - ${Styles.BOTTOM_NAVIGATION_HEIGHT} - ${Styles.HEADER_HEIGHT}\n  );\n  width: 100%;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RunnerContextProvider } from \"./context/RunnerContext\";\nimport { CurrentRunContextProvider } from \"./context/CurrentRunContext\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RunnerContextProvider>\n      <CurrentRunContextProvider>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </CurrentRunContextProvider>\n    </RunnerContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}